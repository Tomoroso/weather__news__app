{"ast":null,"code":"var _jsxFileName = \"F:\\\\The Complete 2023 Web Development Bootcamp\\\\STUDY-PROJECTS\\\\YoutubeProjects\\\\weather_app\\\\src\\\\components\\\\WeatherScreen\\\\WeatherScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport debounce from 'lodash.debounce';\nimport City from '../City/City';\nimport Footer from '../Footer/Footer';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport './weatherScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherScreen = () => {\n  _s();\n  const key = '1d57fcba75368cc323dc71241f670c5d';\n  const [showWeather, setShowWeather] = useState(false);\n  const [weather, setWeather] = useState({\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0,\n    icon: ''\n  });\n  const [geoLocation, setGeoLocation] = useState([]);\n  const [clickedCityData, setClickedCityData] = useState({\n    lat: 0,\n    lon: 0,\n    city: '',\n    country: ''\n  });\n  const [citiesWeather, setCitiesWeather] = useState([{\n    city: 'London',\n    country: 'GB',\n    icon: '',\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0\n  }, {\n    city: 'Amsterdam',\n    country: 'NL',\n    icon: '',\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0\n  }, {\n    city: 'Tokyo',\n    country: 'JP',\n    icon: '',\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0\n  }]);\n  useEffect(() => {\n    const showCityWeather = async () => {\n      const openWeatherLondonURL = `https://api.openweathermap.org/data/2.5/weather?lat=51.5074&lon=-0.1278&appid=${key}&units=metric`;\n      const openWeatherAmsterdamURL = `https://api.openweathermap.org/data/2.5/weather?lat=52.3676&lon=4.9041&appid=${key}&units=metric`;\n      const openWeatherTokyoURL = `https://api.openweathermap.org/data/2.5/weather?lat=35.6764&lon=139.6500&appid=${key}&units=metric`;\n      const resultLondon2 = await fetch(openWeatherLondonURL);\n      const dataLondon2 = await resultLondon2.json();\n      const resultAmsterdam2 = await fetch(openWeatherAmsterdamURL);\n      const dataAmsterdam2 = await resultAmsterdam2.json();\n      const resultTokyo2 = await fetch(openWeatherTokyoURL);\n      const dataTokyo2 = await resultTokyo2.json();\n      const iconLondon = dataLondon2.weather[0].icon;\n      const max_temperatureLondon = Math.round(dataLondon2.main.temp_max);\n      const min_temperatureLondon = Math.floor(dataLondon2.main.temp_min);\n      const iconAmsterdam = dataAmsterdam2.weather[0].icon;\n      const max_temperatureAmsterdam = Math.round(dataAmsterdam2.main.temp_max);\n      const min_temperatureAmsterdam = Math.floor(dataAmsterdam2.main.temp_min);\n      const iconTokyo = dataTokyo2.weather[0].icon;\n      const max_temperatureTokyo = Math.round(dataTokyo2.main.temp_max);\n      const min_temperatureTokyo = Math.floor(dataTokyo2.main.temp_min);\n      const londonURL = `https://api.open-meteo.com/v1/forecast?latitude=51.5074&longitude=-0.1278&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\n      const amsterdamURL = `https://api.open-meteo.com/v1/forecast?latitude=52.3676&longitude=4.9041&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\n      const tokyoURL = `https://api.open-meteo.com/v1/forecast?latitude=35.6764&longitude=139.6500&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\n      const resultLondon = await fetch(londonURL);\n      const dataLondon = await resultLondon.json();\n      const temperatureLondon = dataLondon.current.temperature_2m;\n      const humidityLondon = dataLondon.current.relative_humidity_2m;\n      const feels_likeLondon = dataLondon.current.apparent_temperature;\n      const wind_speedLondon = dataLondon.current.wind_speed_10m;\n      const rainLondon = dataLondon.current.rain;\n      const resultAmsterdam = await fetch(amsterdamURL);\n      const dataAmsterdam = await resultAmsterdam.json();\n      const temperatureAmsterdam = dataAmsterdam.current.temperature_2m;\n      const humidityAmsterdam = dataAmsterdam.current.relative_humidity_2m;\n      const feels_likeAmsterdam = dataAmsterdam.current.apparent_temperature;\n      const wind_speedAmsterdam = dataAmsterdam.current.wind_speed_10m;\n      const rainAmsterdam = dataAmsterdam.current.rain;\n      const resultTokyo = await fetch(tokyoURL);\n      const dataTokyo = await resultTokyo.json();\n      const temperatureTokyo = dataTokyo.current.temperature_2m;\n      const humidityTokyo = dataTokyo.current.relative_humidity_2m;\n      const feels_likeTokyo = dataTokyo.current.apparent_temperature;\n      const wind_speedTokyo = dataTokyo.current.wind_speed_10m;\n      const rainTokyo = dataTokyo.current.rain;\n      const updateCityWeather = (cityIndex, weatherData) => {\n        setCitiesWeather(prevWeather => {\n          const updatedCitiesWeather = [...prevWeather];\n          updatedCitiesWeather[cityIndex] = {\n            ...updatedCitiesWeather[cityIndex],\n            ...weatherData\n          };\n          return updatedCitiesWeather;\n        });\n      };\n      updateCityWeather(0, {\n        temperature: temperatureLondon,\n        humidity: humidityLondon,\n        icon: `http://openweathermap.org/img/wn/${iconLondon}@4x.png`,\n        wind_speed: wind_speedLondon,\n        feels_like: feels_likeLondon,\n        rain: rainLondon,\n        max_temperature: max_temperatureLondon,\n        min_temperature: min_temperatureLondon\n      });\n      updateCityWeather(1, {\n        temperature: temperatureAmsterdam,\n        humidity: humidityAmsterdam,\n        icon: `http://openweathermap.org/img/wn/${iconAmsterdam}@4x.png`,\n        wind_speed: wind_speedAmsterdam,\n        feels_like: feels_likeAmsterdam,\n        rain: rainAmsterdam,\n        max_temperature: max_temperatureAmsterdam,\n        min_temperature: min_temperatureAmsterdam\n      });\n      updateCityWeather(2, {\n        temperature: temperatureTokyo,\n        humidity: humidityTokyo,\n        icon: `http://openweathermap.org/img/wn/${iconTokyo}@4x.png`,\n        wind_speed: wind_speedTokyo,\n        feels_like: feels_likeTokyo,\n        rain: rainTokyo,\n        max_temperature: max_temperatureTokyo,\n        min_temperature: min_temperatureTokyo\n      });\n    };\n    showCityWeather();\n  }, [key]);\n\n  //Getting the user input:\n  const [userInput, setUserInput] = useState(\"\");\n  const updateUserInput = e => {\n    var _e$target;\n    setUserInput(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n  };\n\n  //Setting the waiting time for user input:\n  const debouncedOnChange = debounce(updateUserInput, 600);\n  useEffect(() => {\n    const searchTemp = async () => {\n      const weatherNewsURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}`;\n      const openWeatherURL = `https://api.openweathermap.org/data/2.5/weather?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}&units=metric`;\n      const openMeteoURL = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\n      const results1 = await fetch(openMeteoURL);\n      const data1 = await results1.json();\n      console.log('Data from open-meteo: ', data1);\n      const temperature = Math.round(data1.current.temperature_2m);\n      const humidity = Math.round(data1.current.relative_humidity_2m);\n      const feels_like = Math.round(data1.current.apparent_temperature);\n      const wind_speed = data1.current.wind_speed_10m;\n      const rain = data1.current.rain;\n      const results2 = await fetch(openWeatherURL);\n      const data2 = await results2.json();\n      console.log('Data from openWeather: ', data2);\n      const max_temperature = Math.round(data2.main.temp_max);\n      const min_temperature = Math.floor(data2.main.temp_min);\n      const icon = data2.weather[0].icon;\n      const result3 = await fetch(weatherNewsURL);\n      const data3 = await result3.json();\n      console.log('news: ', data3);\n      setWeather({\n        temperature: temperature,\n        humidity: humidity,\n        feels_like: feels_like,\n        wind_speed: wind_speed,\n        rain: rain,\n        max_temperature: max_temperature,\n        min_temperature: min_temperature,\n        icon: `http://openweathermap.org/img/wn/${icon}@4x.png`\n      });\n    };\n    searchTemp();\n  }, [clickedCityData]);\n\n  //Here I take the geoLocation data.\n\n  useEffect(() => {\n    const search = async () => {\n      const URL = `https://geocoding-api.open-meteo.com/v1/search?name=${userInput}&count=5&language=en&format=json`;\n      const results = await fetch(URL);\n      const data = await results.json();\n      console.log('Data from second useEffect: ', data.results);\n      setGeoLocation(data.results);\n    };\n    search();\n  }, [userInput]);\n\n  //Here i get the clicked city geolocation info\n\n  const handleClick = e => {\n    const li = e.target;\n    const data = li.dataset; // Access the dataset of the clicked element\n    console.log('dataset: ', li.dataset);\n    setClickedCityData({\n      lat: data.lat,\n      lon: data.lon,\n      city: data.city,\n      country: data.country\n    });\n    setShowWeather(true);\n    window.scrollTo(0, 0);\n  };\n  function handleSpanClick(event) {\n    event.stopPropagation();\n    const li = event.target.parentNode;\n    const data = li.dataset;\n    setClickedCityData({\n      lat: data.lat,\n      lon: data.lon,\n      city: data.city,\n      country: data.country\n    });\n    setShowWeather(true);\n  }\n  const buttonClick = () => {\n    setShowWeather(false);\n  };\n\n  //Scroll To the top:\n\n  const handleLinkClick = () => {\n    window.scrollTo(0, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__container\",\n    children: [showWeather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__show-weather \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"weather\",\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.icon,\n            alt: \"icon\",\n            id: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"app__degree\",\n            children: [weather.temperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"city\",\n            children: [clickedCityData.city, \" \", clickedCityData.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn__change-city btn\",\n            onClick: buttonClick,\n            id: \"change\",\n            children: \"Change City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"windValue\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [weather.wind_speed, \" Km/h\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Feels Like\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"feelsLikeValue\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [weather.feels_like, \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Humidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"humidityValue\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [weather.humidity, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Chance of Rain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"rainValue\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [weather.rain, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"MaxTemperature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"max-temp-Value\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [weather.max_temperature, \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"MinTemperature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"min-temp-Value\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [weather.min_temperature, \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__cities-and-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"app__top-header\",\n        children: \"Weather App Built by V. Pinteac\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__big-cities form-and-cities-together\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__city\",\n          children: /*#__PURE__*/_jsxDEV(City, {\n            city: citiesWeather[0].city,\n            country: citiesWeather[0].country,\n            icon: citiesWeather[0].icon,\n            temperature: citiesWeather[0].temperature,\n            feels_like: citiesWeather[0].feels_like,\n            humidity: citiesWeather[0].humidity,\n            rain: citiesWeather[0].rain,\n            max_temperature: citiesWeather[0].max_temperature,\n            min_temperature: citiesWeather[0].min_temperature,\n            wind: citiesWeather[0].wind_speed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__city\",\n          children: /*#__PURE__*/_jsxDEV(City, {\n            city: citiesWeather[1].city,\n            country: citiesWeather[1].country,\n            icon: citiesWeather[1].icon,\n            temperature: citiesWeather[1].temperature,\n            feels_like: citiesWeather[1].feels_like,\n            humidity: citiesWeather[1].humidity,\n            rain: citiesWeather[1].rain,\n            max_temperature: citiesWeather[1].max_temperature,\n            min_temperature: citiesWeather[1].min_temperature,\n            wind: citiesWeather[1].wind_speed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__city\",\n          children: /*#__PURE__*/_jsxDEV(City, {\n            city: citiesWeather[2].city,\n            country: citiesWeather[2].country,\n            icon: citiesWeather[2].icon,\n            temperature: citiesWeather[2].temperature,\n            feels_like: citiesWeather[2].feels_like,\n            humidity: citiesWeather[2].humidity,\n            rain: citiesWeather[2].rain,\n            max_temperature: citiesWeather[2].max_temperature,\n            min_temperature: citiesWeather[2].min_temperature,\n            wind: citiesWeather[2].wind_speed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__form form-cities-together\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSumbit: handleLinkClick,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input__field\",\n            onChange: debouncedOnChange,\n            type: \"text\",\n            placeholder: \"Search City...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }, this), geoLocation ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            onClick: handleClick,\n            children: geoLocation.map(({\n              name,\n              latitude,\n              longitude,\n              country\n            }, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"app__list-item\",\n              \"data-lat\": latitude,\n              \"data-lon\": longitude,\n              \"data-city\": name,\n              \"data-country\": country,\n              children: [name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: handleSpanClick,\n                children: country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 48\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twitter__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Netherland News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__element\",\n        children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n          sourceType: \"https://twitter.com/NL_Times?ref_src=twsrc%5Etfw\",\n          screenName: \"NL_Times\",\n          options: {\n            height: 500,\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__element\",\n        children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n          sourceType: \"https://twitter.com/KNMI?ref_src=twsrc%5Etfw\",\n          screenName: \"KNMI\",\n          options: {\n            height: 500,\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__element\",\n        children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n          sourceType: \"https://twitter.com/DutchNewsNL?ref_src=twsrc%5Etfw\",\n          screenName: \"DutchNewsNL\",\n          options: {\n            height: 500,\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__element\",\n        children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n          sourceType: \"https://twitter.com/accuweather?ref_src=twsrc%5Etfw\",\n          screenName: \"Accuweather\",\n          options: {\n            height: 500,\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__footer flex__center\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherScreen, \"Q9rW/Vh5Tq/HLo7QCxcRNxOXYbw=\");\n_c = WeatherScreen;\nexport default WeatherScreen;\nvar _c;\n$RefreshReg$(_c, \"WeatherScreen\");","map":{"version":3,"names":["React","useState","useEffect","debounce","City","Footer","TwitterTimelineEmbed","jsxDEV","_jsxDEV","WeatherScreen","_s","key","showWeather","setShowWeather","weather","setWeather","temperature","humidity","feels_like","wind_speed","rain","max_temperature","min_temperature","icon","geoLocation","setGeoLocation","clickedCityData","setClickedCityData","lat","lon","city","country","citiesWeather","setCitiesWeather","showCityWeather","openWeatherLondonURL","openWeatherAmsterdamURL","openWeatherTokyoURL","resultLondon2","fetch","dataLondon2","json","resultAmsterdam2","dataAmsterdam2","resultTokyo2","dataTokyo2","iconLondon","max_temperatureLondon","Math","round","main","temp_max","min_temperatureLondon","floor","temp_min","iconAmsterdam","max_temperatureAmsterdam","min_temperatureAmsterdam","iconTokyo","max_temperatureTokyo","min_temperatureTokyo","londonURL","amsterdamURL","tokyoURL","resultLondon","dataLondon","temperatureLondon","current","temperature_2m","humidityLondon","relative_humidity_2m","feels_likeLondon","apparent_temperature","wind_speedLondon","wind_speed_10m","rainLondon","resultAmsterdam","dataAmsterdam","temperatureAmsterdam","humidityAmsterdam","feels_likeAmsterdam","wind_speedAmsterdam","rainAmsterdam","resultTokyo","dataTokyo","temperatureTokyo","humidityTokyo","feels_likeTokyo","wind_speedTokyo","rainTokyo","updateCityWeather","cityIndex","weatherData","prevWeather","updatedCitiesWeather","userInput","setUserInput","updateUserInput","e","_e$target","target","value","debouncedOnChange","searchTemp","weatherNewsURL","openWeatherURL","openMeteoURL","results1","data1","console","log","results2","data2","result3","data3","search","URL","results","data","handleClick","li","dataset","window","scrollTo","handleSpanClick","event","stopPropagation","parentNode","buttonClick","handleLinkClick","className","children","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","wind","onSumbit","onChange","type","placeholder","map","name","latitude","longitude","index","sourceType","screenName","options","height","width","_c","$RefreshReg$"],"sources":["F:/The Complete 2023 Web Development Bootcamp/STUDY-PROJECTS/YoutubeProjects/weather_app/src/components/WeatherScreen/WeatherScreen.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport City from '../City/City';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\r\n\r\nimport './weatherScreen.css'\r\nconst WeatherScreen = () => {\r\n\r\n  const key = '1d57fcba75368cc323dc71241f670c5d';\r\n  \r\n    const [showWeather, setShowWeather] = useState(false);\r\n    const [weather, setWeather] = useState({\r\n        temperature: 0,\r\n        humidity: 0,\r\n        feels_like: 0,\r\n        wind_speed: 0,\r\n        rain: 0,\r\n        max_temperature: 0,\r\n        min_temperature: 0,\r\n        icon: ''\r\n    });\r\n    const [geoLocation, setGeoLocation] = useState([]);\r\n    const [clickedCityData, setClickedCityData] = useState({\r\n        lat: 0,\r\n        lon: 0,\r\n        city: '',\r\n        country: ''\r\n    });\r\n\r\n    const [citiesWeather, setCitiesWeather] = useState([\r\n        {\r\n          city: 'London',\r\n          country: 'GB',\r\n          icon: '',\r\n          temperature: 0,\r\n          humidity: 0,\r\n          feels_like: 0,\r\n          wind_speed: 0,\r\n          rain: 0,\r\n          max_temperature: 0,\r\n          min_temperature: 0\r\n        },\r\n        {\r\n          city: 'Amsterdam',\r\n          country: 'NL',\r\n          icon: '',\r\n          temperature: 0,\r\n          humidity: 0,\r\n          feels_like: 0,\r\n          wind_speed: 0,\r\n          rain: 0,\r\n          max_temperature: 0,\r\n          min_temperature: 0\r\n        },\r\n        {\r\n          city: 'Tokyo',\r\n          country: 'JP',\r\n          icon: '',\r\n          temperature: 0,\r\n          humidity: 0,\r\n          feels_like: 0,\r\n          wind_speed: 0,\r\n          rain: 0,\r\n          max_temperature: 0,\r\n          min_temperature: 0\r\n        }\r\n      ]);\r\n      \r\n\r\n    useEffect(() => {\r\n        const showCityWeather = async () => {\r\n            const openWeatherLondonURL = `https://api.openweathermap.org/data/2.5/weather?lat=51.5074&lon=-0.1278&appid=${key}&units=metric`; \r\n            const openWeatherAmsterdamURL = `https://api.openweathermap.org/data/2.5/weather?lat=52.3676&lon=4.9041&appid=${key}&units=metric`; \r\n            const openWeatherTokyoURL = `https://api.openweathermap.org/data/2.5/weather?lat=35.6764&lon=139.6500&appid=${key}&units=metric`; \r\n\r\n            const resultLondon2 = await fetch(openWeatherLondonURL);\r\n            const dataLondon2 = await resultLondon2.json();\r\n\r\n            const resultAmsterdam2 = await fetch(openWeatherAmsterdamURL);\r\n            const dataAmsterdam2 = await resultAmsterdam2.json();\r\n\r\n            const resultTokyo2 = await fetch(openWeatherTokyoURL);\r\n            const dataTokyo2 = await resultTokyo2.json();\r\n\r\n            const iconLondon = dataLondon2.weather[0].icon\r\n            const max_temperatureLondon = Math.round(dataLondon2.main.temp_max);\r\n            const min_temperatureLondon = Math.floor(dataLondon2.main.temp_min);\r\n\r\n            const iconAmsterdam = dataAmsterdam2.weather[0].icon\r\n            const max_temperatureAmsterdam = Math.round(dataAmsterdam2.main.temp_max);\r\n            const min_temperatureAmsterdam = Math.floor(dataAmsterdam2.main.temp_min);\r\n\r\n            const iconTokyo = dataTokyo2.weather[0].icon\r\n            const max_temperatureTokyo = Math.round(dataTokyo2.main.temp_max);\r\n            const min_temperatureTokyo = Math.floor(dataTokyo2.main.temp_min);\r\n            \r\n            const londonURL = `https://api.open-meteo.com/v1/forecast?latitude=51.5074&longitude=-0.1278&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\r\n            const amsterdamURL = `https://api.open-meteo.com/v1/forecast?latitude=52.3676&longitude=4.9041&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\r\n            const tokyoURL = `https://api.open-meteo.com/v1/forecast?latitude=35.6764&longitude=139.6500&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\r\n            const resultLondon = await fetch(londonURL);\r\n            const dataLondon = await resultLondon.json();\r\n\r\n            const temperatureLondon = dataLondon.current.temperature_2m;\r\n            const humidityLondon = dataLondon.current.relative_humidity_2m;\r\n            const feels_likeLondon = dataLondon.current.apparent_temperature;\r\n            const wind_speedLondon = dataLondon.current.wind_speed_10m;\r\n            const rainLondon = dataLondon.current.rain;\r\n            \r\n            \r\n            const resultAmsterdam = await fetch(amsterdamURL);\r\n            const dataAmsterdam = await resultAmsterdam.json();\r\n            \r\n            const temperatureAmsterdam = dataAmsterdam.current.temperature_2m;\r\n            const humidityAmsterdam = dataAmsterdam.current.relative_humidity_2m;\r\n            const feels_likeAmsterdam = dataAmsterdam.current.apparent_temperature;\r\n            const wind_speedAmsterdam = dataAmsterdam.current.wind_speed_10m;\r\n            const rainAmsterdam = dataAmsterdam.current.rain;\r\n            \r\n            \r\n            const resultTokyo = await fetch(tokyoURL);\r\n            const dataTokyo = await resultTokyo.json();\r\n            \r\n            const temperatureTokyo = dataTokyo.current.temperature_2m;\r\n            const humidityTokyo = dataTokyo.current.relative_humidity_2m;\r\n            const feels_likeTokyo = dataTokyo.current.apparent_temperature;\r\n            const wind_speedTokyo = dataTokyo.current.wind_speed_10m;\r\n            const rainTokyo = dataTokyo.current.rain;\r\n\r\n            const updateCityWeather = (cityIndex, weatherData) => {\r\n            setCitiesWeather(prevWeather => {\r\n            const updatedCitiesWeather = [...prevWeather];\r\n            updatedCitiesWeather[cityIndex] = { ...updatedCitiesWeather[cityIndex], ...weatherData };\r\n            return updatedCitiesWeather;\r\n            });\r\n          };\r\n\r\n          updateCityWeather(0, { temperature: temperatureLondon, humidity: humidityLondon, icon: `http://openweathermap.org/img/wn/${iconLondon}@4x.png`, wind_speed: wind_speedLondon, feels_like: feels_likeLondon, rain: rainLondon, max_temperature: max_temperatureLondon, min_temperature: min_temperatureLondon });\r\n          updateCityWeather(1, { temperature: temperatureAmsterdam, humidity: humidityAmsterdam, icon: `http://openweathermap.org/img/wn/${iconAmsterdam}@4x.png`, wind_speed: wind_speedAmsterdam, feels_like: feels_likeAmsterdam, rain: rainAmsterdam, max_temperature: max_temperatureAmsterdam, min_temperature: min_temperatureAmsterdam });\r\n          updateCityWeather(2, { temperature: temperatureTokyo, humidity: humidityTokyo, icon: `http://openweathermap.org/img/wn/${iconTokyo}@4x.png`, wind_speed: wind_speedTokyo, feels_like: feels_likeTokyo, rain: rainTokyo, max_temperature: max_temperatureTokyo, min_temperature: min_temperatureTokyo });\r\n\r\n        };\r\n        showCityWeather();\r\n\r\n    }, [key])\r\n\r\n\r\n    //Getting the user input:\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    \r\n    const updateUserInput = (e) => {\r\n        setUserInput(e?.target?.value); \r\n    }\r\n\r\n    //Setting the waiting time for user input:\r\n    const debouncedOnChange = debounce(updateUserInput, 600);\r\n\r\n    useEffect(() => {\r\n        const searchTemp = async () => {\r\n        const weatherNewsURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}`;\r\n        const openWeatherURL = `https://api.openweathermap.org/data/2.5/weather?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}&units=metric`;    \r\n        const openMeteoURL = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\r\n\r\n        \r\n            const results1 = await fetch(openMeteoURL);\r\n            const data1 = await results1.json();\r\n            console.log('Data from open-meteo: ', data1); \r\n\r\n            const temperature = Math.round(data1.current.temperature_2m);\r\n            const humidity = Math.round(data1.current.relative_humidity_2m);\r\n            const feels_like = Math.round(data1.current.apparent_temperature);\r\n            const wind_speed = data1.current.wind_speed_10m;\r\n            const rain = data1.current.rain;\r\n            \r\n            const results2 = await fetch(openWeatherURL);\r\n            const data2 = await results2.json();\r\n            console.log('Data from openWeather: ', data2)\r\n            \r\n            const max_temperature = Math.round(data2.main.temp_max);\r\n            const min_temperature = Math.floor(data2.main.temp_min);\r\n            const icon = data2.weather[0].icon;\r\n\r\n            const result3 = await fetch(weatherNewsURL);\r\n            const data3 = await result3.json();\r\n            console.log('news: ', data3);\r\n           \r\n\r\n        setWeather({\r\n            temperature: temperature,\r\n            humidity: humidity,\r\n            feels_like: feels_like,\r\n            wind_speed: wind_speed,\r\n            rain: rain,\r\n            max_temperature: max_temperature,\r\n            min_temperature: min_temperature,\r\n            icon: `http://openweathermap.org/img/wn/${icon}@4x.png`\r\n        });\r\n    };\r\n    searchTemp();\r\n    \r\n}, [clickedCityData]);\r\n\r\n//Here I take the geoLocation data.\r\n\r\n    useEffect(() => {\r\n        const search = async () => {\r\n            const URL = `https://geocoding-api.open-meteo.com/v1/search?name=${userInput}&count=5&language=en&format=json`\r\n            const results = await fetch(URL);\r\n            const data = await results.json();\r\n            console.log('Data from second useEffect: ', data.results);\r\n\r\n            setGeoLocation(data.results);                                         \r\n        }\r\n        search();\r\n    }, [userInput]);\r\n\r\n//Here i get the clicked city geolocation info\r\n\r\n   const handleClick = (e) => {\r\n       const li = e.target;\r\n       const data = li.dataset;  // Access the dataset of the clicked element\r\n       console.log('dataset: ',li.dataset)\r\n\r\n       setClickedCityData({lat: data.lat, lon: data.lon, city: data.city, country: data.country});\r\n       setShowWeather(true);\r\n       window.scrollTo(0, 0);\r\n\r\n   }\r\n\r\n   function handleSpanClick(event) {\r\n    event.stopPropagation();\r\n    const li = event.target.parentNode;\r\n    const data = li.dataset;\r\n    setClickedCityData({lat: data.lat, lon: data.lon, city: data.city, country: data.country});\r\n    setShowWeather(true);\r\n  }\r\n\r\n    const buttonClick = () => {\r\n        setShowWeather(false);\r\n    }\r\n\r\n    //Scroll To the top:\r\n\r\n    const handleLinkClick = () => {\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\nreturn (\r\n\r\n        <div className=\"app__container\">\r\n\r\n            {showWeather ? (\r\n                <div className=\"background\">\r\n                \r\n                \r\n                    <div className=\"app__show-weather \">\r\n\r\n                            <div id=\"weather\" className=\"\">\r\n                                <img src={weather.icon} alt=\"icon\" id=\"icon\" />\r\n                                <h1 className=\"app__degree\">{weather.temperature}&deg;C</h1>\r\n                                <p>{}</p>\r\n                                <h2 id=\"city\">{clickedCityData.city} {clickedCityData.country}</h2>\r\n                                <button className=\"btn__change-city btn\" onClick={buttonClick} id=\"change\">Change City</button>\r\n\r\n                                <div className=\"info\">\r\n\r\n                                    <div className=\"value\">\r\n                                        <h3>Wind</h3>\r\n                                        <div id=\"windValue\" ><p>{weather.wind_speed} Km/h</p></div>\r\n                                    </div>\r\n                                    <div className=\"value\">\r\n                                        <h3>Feels Like</h3>\r\n                                        <div id=\"feelsLikeValue\" ><p>{weather.feels_like}&deg;C</p></div>\r\n                                    </div>\r\n                                    <div className=\"value\">\r\n                                        <h3>Humidity</h3>\r\n                                        <div id=\"humidityValue\" ><p>{weather.humidity}%</p></div>\r\n                                    </div>\r\n                                    <div className=\"value\">\r\n                                        <h3>Chance of Rain</h3>\r\n                                        <div id=\"rainValue\" ><p>{weather.rain}%</p></div>\r\n                                    </div>\r\n                                    <div className=\"value\">\r\n                                        <h3>MaxTemperature</h3>\r\n                                        <div id=\"max-temp-Value\" ><p>{weather.max_temperature}&deg;C</p></div> \r\n                                    </div>\r\n                                    <div className=\"value\">\r\n                                        <h3>MinTemperature</h3>\r\n                                        <div id=\"min-temp-Value\" ><p>{weather.min_temperature}&deg;C</p></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n                \r\n\r\n\r\n\r\n            ) : (\r\n                <div className=\"app__cities-and-form\" >\r\n\r\n                    <h4 className=\"app__top-header\">Weather App Built by V. Pinteac</h4>\r\n\r\n                    <div className=\"app__big-cities form-and-cities-together\">\r\n                    <div className=\"app__city\">\r\n                        <City\r\n                            city={citiesWeather[0].city}\r\n                            country={citiesWeather[0].country}\r\n                            icon={citiesWeather[0].icon}\r\n                            temperature={citiesWeather[0].temperature}\r\n                            feels_like={citiesWeather[0].feels_like}\r\n                            humidity={citiesWeather[0].humidity}\r\n                            rain={citiesWeather[0].rain}\r\n                            max_temperature={citiesWeather[0].max_temperature}\r\n                            min_temperature={citiesWeather[0].min_temperature}\r\n                            wind={citiesWeather[0].wind_speed}\r\n                        />\r\n                    </div>\r\n                    <div className=\"app__city\">\r\n                        <City\r\n                            city={citiesWeather[1].city}\r\n                            country={citiesWeather[1].country}\r\n                            icon={citiesWeather[1].icon}\r\n                            temperature={citiesWeather[1].temperature}\r\n                            feels_like={citiesWeather[1].feels_like}\r\n                            humidity={citiesWeather[1].humidity}\r\n                            rain={citiesWeather[1].rain}\r\n                            max_temperature={citiesWeather[1].max_temperature}\r\n                            min_temperature={citiesWeather[1].min_temperature}\r\n                            wind={citiesWeather[1].wind_speed}\r\n                        />\r\n                    </div>\r\n                    <div className=\"app__city\">\r\n                        <City\r\n                            city={citiesWeather[2].city}\r\n                            country={citiesWeather[2].country}\r\n                            icon={citiesWeather[2].icon}\r\n                            temperature={citiesWeather[2].temperature}\r\n                            feels_like={citiesWeather[2].feels_like}\r\n                            humidity={citiesWeather[2].humidity}\r\n                            rain={citiesWeather[2].rain}\r\n                            max_temperature={citiesWeather[2].max_temperature}\r\n                            min_temperature={citiesWeather[2].min_temperature}\r\n                            wind={citiesWeather[2].wind_speed}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"app__form form-cities-together\">\r\n                        <form onSumbit={handleLinkClick}>\r\n                            <input className=\"input__field\" onChange={debouncedOnChange} type=\"text\" placeholder=\"Search City...\" />\r\n\r\n                            {geoLocation ? (\r\n                                <ul onClick={handleClick}>\r\n                                    {geoLocation.map(({name, latitude, longitude, country}, index) => (\r\n                                        <li className=\"app__list-item\"\r\n                                        key={index}\r\n                                        data-lat={latitude}\r\n                                        data-lon={longitude}\r\n                                        data-city={name}\r\n                                        data-country={country}\r\n                                        >\r\n                                        {name} <span onClick={handleSpanClick}>{country}</span>\r\n                                        \r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>Waiting...</p>\r\n                            )\r\n                            \r\n                            }\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            )}\r\n\r\n            <div className=\"twitter__container\">\r\n                <div className=\"twitter__heading\"><h1>Netherland News</h1></div>\r\n\r\n                <div className=\"twitter__element\">\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"https://twitter.com/NL_Times?ref_src=twsrc%5Etfw\"\r\n                    screenName=\"NL_Times\"\r\n                    options={{ height: 500, width: 600 }}\r\n                />\r\n                </div>\r\n                \r\n                <div className=\"twitter__element\">\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"https://twitter.com/KNMI?ref_src=twsrc%5Etfw\"\r\n                    screenName=\"KNMI\"\r\n                    options={{ height: 500, width: 600 }}\r\n                />               \r\n                </div>\r\n\r\n                <div className=\"twitter__element\">\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"https://twitter.com/DutchNewsNL?ref_src=twsrc%5Etfw\"\r\n                    screenName=\"DutchNewsNL\"\r\n                    options={{ height: 500, width: 600 }}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"twitter__element\">\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"https://twitter.com/accuweather?ref_src=twsrc%5Etfw\"\r\n                    screenName=\"Accuweather\"\r\n                    options={{ height: 500, width: 600 }}\r\n                />\r\n                </div>\r\n\r\n            \r\n\r\n            </div>\r\n            <div className=\"app__footer flex__center\">\r\n                <Footer />\r\n            </div>\r\n            \r\n\r\n        </div>\r\n\r\n       )\r\n}\r\n\r\n\r\nexport default WeatherScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}