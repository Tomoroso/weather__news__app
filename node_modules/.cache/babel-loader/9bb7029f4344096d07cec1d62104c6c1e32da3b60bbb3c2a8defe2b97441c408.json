{"ast":null,"code":"var _jsxFileName = \"F:\\\\The Complete 2023 Web Development Bootcamp\\\\STUDY-PROJECTS\\\\YoutubeProjects\\\\weather_app\\\\src\\\\components\\\\SearchCity\\\\SearchCity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport debounce from 'lodash.debounce';\nimport './searchCity.css';\n\n// const DataFetcher = () => {\n//     const [data, setData] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     console.log(data);\n\n//     useEffect(() => {\n//         async function search() {\n//             try {\n//                 const response = await search(`http://api.openweathermap.org/geo/1.0/direct?q=${userInput}&limit=5&appid={key}`);\n//                 const data = await response.json();\n//                 setData(data);\n\n//                 setLoading(false);\n//             } catch (error) {\n//                 setError(error);\n//                 setLoading(false);\n//             }\n//         }\n\n//         search();\n//     }, []);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchCity = () => {\n  _s();\n  const key = \"1d57fcba75368cc323dc71241f670c5d\";\n  const [userInput, setUserInput] = useState(\"\");\n  const [ulValue, setUlValue] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const updateUserInput = e => {\n    var _e$target;\n    return setUserInput(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n  };\n  const debouncedOnChange = debounce(updateUserInput, 600);\n  useEffect(() => {\n    // const fetchData = async () => {\n\n    //     const URL = `http://api.openweathermap.org/geo/1.0/direct?q=${userInput}&limit=5&appid=${key}`;\n    //     const response = await fetch(URL);\n    //     const data = await response.json();\n\n    // }\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${userInput}&limit=5&appid=${key}`).then(response => response.json()).then(data => setUlValue(data).cath(err => console.log(err)));\n  }, [userInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyUp: debouncedOnChange,\n        type: \"text\",\n        placeholder: \"Search City...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ulValue.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchCity, \"zqBroA6Jeb1YSMfYcwSLaGxUCeU=\");\n_c = SearchCity;\nexport default SearchCity;\nvar _c;\n$RefreshReg$(_c, \"SearchCity\");","map":{"version":3,"names":["React","useState","useEffect","debounce","jsxDEV","_jsxDEV","SearchCity","_s","key","userInput","setUserInput","ulValue","setUlValue","apiData","setApiData","updateUserInput","e","_e$target","target","value","debouncedOnChange","fetch","then","response","json","data","cath","err","console","log","children","onKeyUp","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","name","_c","$RefreshReg$"],"sources":["F:/The Complete 2023 Web Development Bootcamp/STUDY-PROJECTS/YoutubeProjects/weather_app/src/components/SearchCity/SearchCity.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport debounce from 'lodash.debounce';\r\n\r\nimport './searchCity.css';\r\n\r\n// const DataFetcher = () => {\r\n//     const [data, setData] = useState(null);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//     console.log(data);\r\n\r\n//     useEffect(() => {\r\n//         async function search() {\r\n//             try {\r\n//                 const response = await search(`http://api.openweathermap.org/geo/1.0/direct?q=${userInput}&limit=5&appid={key}`);\r\n//                 const data = await response.json();\r\n//                 setData(data);\r\n                \r\n//                 setLoading(false);\r\n//             } catch (error) {\r\n//                 setError(error);\r\n//                 setLoading(false);\r\n//             }\r\n//         }\r\n\r\n//         search();\r\n//     }, []);\r\n\r\n\r\n\r\nconst SearchCity = () => {\r\n    const key = \"1d57fcba75368cc323dc71241f670c5d\";\r\n    \r\n    const [userInput, setUserInput] = useState(\"\");\r\n    const [ulValue, setUlValue] = useState([]);\r\n    const [apiData, setApiData] = useState([]);\r\n    const updateUserInput = e => setUserInput(e?.target?.value);\r\n    const debouncedOnChange = debounce(updateUserInput, 600);\r\n\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        // const fetchData = async () => {\r\n            \r\n        //     const URL = `http://api.openweathermap.org/geo/1.0/direct?q=${userInput}&limit=5&appid=${key}`;\r\n        //     const response = await fetch(URL);\r\n        //     const data = await response.json();\r\n            \r\n        // }\r\n        fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${userInput}&limit=5&appid=${key}`)\r\n        .then(response => response.json())\r\n        .then(data => setUlValue(data)\r\n        .cath(err => console.log(err)))\r\n\r\n\r\n    }, [userInput]);\r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div>\r\n        <form>\r\n            <input onKeyUp={debouncedOnChange} type=\"text\" placeholder=\"Search City...\" />\r\n            <ul>\r\n            {ulValue.map((item, index) => (\r\n                <li key={index}>{item.name}</li>\r\n            ))}\r\n            </ul>\r\n        </form>\r\n    </div>\r\n    )\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default SearchCity;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,OAAO,kBAAkB;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,GAAG,GAAG,kCAAkC;EAE9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMc,eAAe,GAAGC,CAAC;IAAA,IAAAC,SAAA;IAAA,OAAIP,YAAY,CAACM,CAAC,aAADA,CAAC,wBAAAC,SAAA,GAADD,CAAC,CAAEE,MAAM,cAAAD,SAAA,uBAATA,SAAA,CAAWE,KAAK,CAAC;EAAA;EAC3D,MAAMC,iBAAiB,GAAGjB,QAAQ,CAACY,eAAe,EAAE,GAAG,CAAC;EAKxDb,SAAS,CAAC,MAAM;IACZ;;IAEA;IACA;IACA;;IAEA;IACAmB,KAAK,CAAE,kDAAiDZ,SAAU,kBAAiBD,GAAI,EAAC,CAAC,CACxFc,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIb,UAAU,CAACa,IAAI,CAAC,CAC7BC,IAAI,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC;EAGnC,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC;EAKf,oBACAJ,OAAA;IAAAyB,QAAA,eACIzB,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAO0B,OAAO,EAAEX,iBAAkB;QAACY,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9EhC,OAAA;QAAAyB,QAAA,EACCnB,OAAO,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBnC,OAAA;UAAAyB,QAAA,EAAiBS,IAAI,CAACE;QAAI,GAAjBD,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGV,CAAC;AAAC9B,EAAA,CA5CID,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AAiDhB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}