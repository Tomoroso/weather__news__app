{"ast":null,"code":"var _jsxFileName = \"F:\\\\The Complete 2023 Web Development Bootcamp\\\\STUDY-PROJECTS\\\\YoutubeProjects\\\\weather_app\\\\src\\\\components\\\\WeatherScreen\\\\WeatherScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport debounce from 'lodash.debounce';\nimport City from '../City/City';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport './weatherScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherScreen = () => {\n  _s();\n  const key = '1d57fcba75368cc323dc71241f670c5d';\n  const [showWeather, setShowWeather] = useState(false);\n  const [weather, setWeather] = useState({\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0,\n    icon: ''\n  });\n  const [geoLocation, setGeoLocation] = useState([]);\n  const [clickedCityData, setClickedCityData] = useState({\n    lat: 0,\n    lon: 0,\n    city: '',\n    country: ''\n  });\n  const [citiesWeather, setCitiesWeather] = useState([{\n    city: 'London',\n    country: 'GB',\n    icon: '',\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0\n  }, {\n    city: 'Amsterdam',\n    country: 'NL',\n    icon: '',\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0\n  }, {\n    city: 'Tokyo',\n    country: 'JP',\n    icon: '',\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0\n  }]);\n  const updateCityWeather = (cityIndex, weatherData) => {\n    setCitiesWeather(prevWeather => {\n      const updatedCitiesWeather = [...prevWeather];\n      updatedCitiesWeather[cityIndex] = {\n        ...updatedCitiesWeather[cityIndex],\n        ...weatherData\n      };\n      return updatedCitiesWeather;\n    });\n  };\n  updateCityWeather(0, {\n    temperature: 25,\n    humidity: 70,\n    wind_speed: 15\n  });\n  useEffect(() => {\n    const showCityWeather = async () => {\n      const londonURL = `https://api.open-meteo.com/v1/forecast?latitude=51.5074&longitude=-0.1278&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\n      const amsterdamURL = `https://api.open-meteo.com/v1/forecast?latitude=52.3676&longitude=4.9041&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\n      const tokyoURL = `https://api.open-meteo.com/v1/forecast?latitude=35.6764&longitude=139.6500&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\n      const resultLondon = await fetch(londonURL);\n      const dataLondon = await resultLondon.json();\n      // const iconLondon = dataLondon.\n      // const temperatureLondon = dataLondon.\n      // const humidityLondon = dataLondon.\n      // const feels_likeLondon = dataLondon.\n      // const wind_speedLondon = dataLondon.\n      // const rainLondon = dataLondon.\n      // const max_temperatureLondon = dataLondon.\n      // const min_temperatureLondon = dataLondon.\n      console.log('Data london:', dataLondon);\n      const resultAmsterdam = await fetch(amsterdamURL);\n      const dataAmsterdam = await resultAmsterdam.json();\n      // const iconAmsterdam = dataAmsterdam.\n      // const temperatureAmsterdam = dataAmsterdam.\n      // const humidityAmsterdam = dataAmsterdam.\n      // const feels_likeAmsterdam = dataAmsterdam.\n      // const wind_speedAmsterdam = dataAmsterdam.\n      // const rainAmsterdam = dataAmsterdam.\n      // const max_temperatureAmsterdam = dataAmsterdam.\n      // const min_temperatureAmsterdam = dataAmsterdam.\n\n      const resultTokyo = await fetch(tokyoURL);\n      const dataTokyo = await resultTokyo.json();\n      // const iconTokyo = dataTokyo.\n      // const temperatureTokyo = dataTokyo.\n      // const humidityTokyo = dataTokyo.\n      // const feels_likeTokyo = dataTokyo.\n      // const wind_speedTokyo = dataTokyo.\n      // const rainTokyo = dataTokyo.\n      // const max_temperatureTokyo = dataTokyo.\n      // const min_temperatureTokyo = dataTokyo.\n    };\n  });\n\n  //Getting the user input:\n  const [userInput, setUserInput] = useState(\"\");\n  const updateUserInput = e => {\n    var _e$target;\n    setUserInput(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n  };\n\n  //Setting the waiting time for user input:\n  const debouncedOnChange = debounce(updateUserInput, 600);\n  useEffect(() => {\n    const searchTemp = async () => {\n      const weatherNewsURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}`;\n      const openWeatherURL = `https://api.openweathermap.org/data/2.5/weather?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}&units=metric`;\n      const openMeteoURL = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\n      const results1 = await fetch(openMeteoURL);\n      const data1 = await results1.json();\n      console.log('Data from open-meteo: ', data1);\n      const temperature = Math.round(data1.current.temperature_2m);\n      const humidity = Math.round(data1.current.relative_humidity_2m);\n      const feels_like = Math.round(data1.current.apparent_temperature);\n      const wind_speed = data1.current.wind_speed_10m;\n      const rain = data1.current.rain;\n      const results2 = await fetch(openWeatherURL);\n      const data2 = await results2.json();\n      console.log('Data from openWeather: ', data2);\n      const max_temperature = Math.round(data2.main.temp_max);\n      const min_temperature = Math.floor(data2.main.temp_min);\n      const icon = data2.weather[0].icon;\n      const result3 = await fetch(weatherNewsURL);\n      const data3 = await result3.json();\n      console.log('news: ', data3);\n      setWeather({\n        temperature: temperature,\n        humidity: humidity,\n        feels_like: feels_like,\n        wind_speed: wind_speed,\n        rain: rain,\n        max_temperature: max_temperature,\n        min_temperature: min_temperature,\n        icon: `http://openweathermap.org/img/wn/${icon}@4x.png`\n      });\n    };\n    searchTemp();\n  }, [clickedCityData]);\n\n  //Here I take the geoLocation data.\n\n  useEffect(() => {\n    const search = async () => {\n      const URL = `https://geocoding-api.open-meteo.com/v1/search?name=${userInput}&count=5&language=en&format=json`;\n      const results = await fetch(URL);\n      const data = await results.json();\n      console.log('Data from second useEffect: ', data.results);\n      setGeoLocation(data.results);\n    };\n    search();\n  }, [userInput]);\n\n  //Here i get the clicked city geolocation info\n\n  const handleClick = e => {\n    const li = e.target;\n    const data = li.dataset; // Access the dataset of the clicked element\n    console.log('dataset: ', li.dataset);\n    setClickedCityData({\n      lat: data.lat,\n      lon: data.lon,\n      city: data.city,\n      country: data.country\n    });\n    setShowWeather(true);\n  };\n  function handleSpanClick(event) {\n    event.stopPropagation();\n    const li = event.target.parentNode;\n    const data = li.dataset;\n    setClickedCityData({\n      lat: data.lat,\n      lon: data.lon,\n      city: data.city,\n      country: data.country\n    });\n    setShowWeather(true);\n  }\n  const buttonClick = () => {\n    setShowWeather(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__container\",\n    children: [showWeather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__show-weather \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"weather\",\n        className: \"flex__center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: weather.icon,\n          alt: \"icon\",\n          id: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app__degree\",\n          children: [weather.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"city\",\n          children: [clickedCityData.city, \" \", clickedCityData.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__change-city btn\",\n          onClick: buttonClick,\n          id: \"change\",\n          children: \"Change City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"windValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.wind_speed, \" Km/h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Feels Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"feelsLikeValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.feels_like, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"humidityValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Chance of Rain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"rainValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.rain, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"MaxTemperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"max-temp-Value\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.max_temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"MinTemperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"min-temp-Value\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.min_temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__cities-and-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"app__top-header\",\n        children: \"Weather App Built by V. Pinteac\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__big-cities form-and-cities-together\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__city\",\n          children: /*#__PURE__*/_jsxDEV(City, {\n            city: \"London\",\n            country: \"GB\",\n            icon: \"icon\",\n            temperature: 25,\n            feels_like: 22,\n            humidity: 70,\n            rain: 10,\n            max_temperature: 30,\n            min_temperature: 20,\n            wind: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__city\",\n          children: /*#__PURE__*/_jsxDEV(City, {\n            city: \"London\",\n            country: \"GB\",\n            icon: \"icon\",\n            temperature: 25,\n            feels_like: 22,\n            humidity: 70,\n            rain: 10,\n            max_temperature: 30,\n            min_temperature: 20,\n            wind: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__city\",\n          children: /*#__PURE__*/_jsxDEV(City, {\n            city: \"London\",\n            country: \"GB\",\n            icon: \"icon\",\n            temperature: 25,\n            feels_like: 22,\n            humidity: 70,\n            rain: 10,\n            max_temperature: 30,\n            min_temperature: 20,\n            wind: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__form form-cities-together\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input__field\",\n            onChange: debouncedOnChange,\n            type: \"text\",\n            placeholder: \"Search City...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this), geoLocation ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            onClick: handleClick,\n            children: geoLocation.map(({\n              name,\n              latitude,\n              longitude,\n              country\n            }, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"app__list-item\",\n              \"data-lat\": latitude,\n              \"data-lon\": longitude,\n              \"data-city\": name,\n              \"data-country\": country,\n              children: [name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: handleSpanClick,\n                children: country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 48\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twitter__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Netherland News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__element\",\n        children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n          sourceType: \"https://twitter.com/NL_Times?ref_src=twsrc%5Etfw\",\n          screenName: \"NL_Times\",\n          options: {\n            height: 500,\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__element\",\n        children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n          sourceType: \"https://twitter.com/KNMI?ref_src=twsrc%5Etfw\",\n          screenName: \"KNMI\",\n          options: {\n            height: 500,\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__element\",\n        children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n          sourceType: \"https://twitter.com/DutchNewsNL?ref_src=twsrc%5Etfw\",\n          screenName: \"DutchNewsNL\",\n          options: {\n            height: 500,\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter__element\",\n        children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n          sourceType: \"https://twitter.com/accuweather?ref_src=twsrc%5Etfw\",\n          screenName: \"Accuweather\",\n          options: {\n            height: 500,\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherScreen, \"Q9rW/Vh5Tq/HLo7QCxcRNxOXYbw=\");\n_c = WeatherScreen;\nexport default WeatherScreen;\nvar _c;\n$RefreshReg$(_c, \"WeatherScreen\");","map":{"version":3,"names":["React","useState","useEffect","debounce","City","TwitterTimelineEmbed","jsxDEV","_jsxDEV","WeatherScreen","_s","key","showWeather","setShowWeather","weather","setWeather","temperature","humidity","feels_like","wind_speed","rain","max_temperature","min_temperature","icon","geoLocation","setGeoLocation","clickedCityData","setClickedCityData","lat","lon","city","country","citiesWeather","setCitiesWeather","updateCityWeather","cityIndex","weatherData","prevWeather","updatedCitiesWeather","showCityWeather","londonURL","amsterdamURL","tokyoURL","resultLondon","fetch","dataLondon","json","console","log","resultAmsterdam","dataAmsterdam","resultTokyo","dataTokyo","userInput","setUserInput","updateUserInput","e","_e$target","target","value","debouncedOnChange","searchTemp","weatherNewsURL","openWeatherURL","openMeteoURL","results1","data1","Math","round","current","temperature_2m","relative_humidity_2m","apparent_temperature","wind_speed_10m","results2","data2","main","temp_max","floor","temp_min","result3","data3","search","URL","results","data","handleClick","li","dataset","handleSpanClick","event","stopPropagation","parentNode","buttonClick","className","children","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","wind","onChange","type","placeholder","map","name","latitude","longitude","index","sourceType","screenName","options","height","width","_c","$RefreshReg$"],"sources":["F:/The Complete 2023 Web Development Bootcamp/STUDY-PROJECTS/YoutubeProjects/weather_app/src/components/WeatherScreen/WeatherScreen.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport City from '../City/City';\r\n\r\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\r\n\r\nimport './weatherScreen.css'\r\nconst WeatherScreen = () => {\r\n  const key = '1d57fcba75368cc323dc71241f670c5d';\r\n    const [showWeather, setShowWeather] = useState(false);\r\n    const [weather, setWeather] = useState({\r\n        temperature: 0,\r\n        humidity: 0,\r\n        feels_like: 0,\r\n        wind_speed: 0,\r\n        rain: 0,\r\n        max_temperature: 0,\r\n        min_temperature: 0,\r\n        icon: ''\r\n    });\r\n    const [geoLocation, setGeoLocation] = useState([]);\r\n    const [clickedCityData, setClickedCityData] = useState({\r\n        lat: 0,\r\n        lon: 0,\r\n        city: '',\r\n        country: ''\r\n    });\r\n\r\n    const [citiesWeather, setCitiesWeather] = useState([\r\n        {\r\n          city: 'London',\r\n          country: 'GB',\r\n          icon: '',\r\n          temperature: 0,\r\n          humidity: 0,\r\n          feels_like: 0,\r\n          wind_speed: 0,\r\n          rain: 0,\r\n          max_temperature: 0,\r\n          min_temperature: 0\r\n        },\r\n        {\r\n          city: 'Amsterdam',\r\n          country: 'NL',\r\n          icon: '',\r\n          temperature: 0,\r\n          humidity: 0,\r\n          feels_like: 0,\r\n          wind_speed: 0,\r\n          rain: 0,\r\n          max_temperature: 0,\r\n          min_temperature: 0\r\n        },\r\n        {\r\n          city: 'Tokyo',\r\n          country: 'JP',\r\n          icon: '',\r\n          temperature: 0,\r\n          humidity: 0,\r\n          feels_like: 0,\r\n          wind_speed: 0,\r\n          rain: 0,\r\n          max_temperature: 0,\r\n          min_temperature: 0\r\n        }\r\n      ]);\r\n      \r\n      const updateCityWeather = (cityIndex, weatherData) => {\r\n        setCitiesWeather(prevWeather => {\r\n          const updatedCitiesWeather = [...prevWeather];\r\n          updatedCitiesWeather[cityIndex] = { ...updatedCitiesWeather[cityIndex], ...weatherData };\r\n          return updatedCitiesWeather;\r\n        });\r\n      };\r\n      \r\n      updateCityWeather(0, { temperature: 25, humidity: 70, wind_speed: 15 });\r\n\r\n    useEffect(() => {\r\n        const showCityWeather = async () => {\r\n            const londonURL = `https://api.open-meteo.com/v1/forecast?latitude=51.5074&longitude=-0.1278&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\r\n            const amsterdamURL = `https://api.open-meteo.com/v1/forecast?latitude=52.3676&longitude=4.9041&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\r\n            const tokyoURL = `https://api.open-meteo.com/v1/forecast?latitude=35.6764&longitude=139.6500&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\r\n            const resultLondon = await fetch(londonURL);\r\n            const dataLondon = await resultLondon.json();\r\n            // const iconLondon = dataLondon.\r\n            // const temperatureLondon = dataLondon.\r\n            // const humidityLondon = dataLondon.\r\n            // const feels_likeLondon = dataLondon.\r\n            // const wind_speedLondon = dataLondon.\r\n            // const rainLondon = dataLondon.\r\n            // const max_temperatureLondon = dataLondon.\r\n            // const min_temperatureLondon = dataLondon.\r\n            console.log('Data london:', dataLondon);\r\n            \r\n\r\n            const resultAmsterdam = await fetch(amsterdamURL);\r\n            const dataAmsterdam = await resultAmsterdam.json();\r\n            // const iconAmsterdam = dataAmsterdam.\r\n            // const temperatureAmsterdam = dataAmsterdam.\r\n            // const humidityAmsterdam = dataAmsterdam.\r\n            // const feels_likeAmsterdam = dataAmsterdam.\r\n            // const wind_speedAmsterdam = dataAmsterdam.\r\n            // const rainAmsterdam = dataAmsterdam.\r\n            // const max_temperatureAmsterdam = dataAmsterdam.\r\n            // const min_temperatureAmsterdam = dataAmsterdam.\r\n\r\n            const resultTokyo = await fetch(tokyoURL);\r\n            const dataTokyo = await resultTokyo.json();\r\n            // const iconTokyo = dataTokyo.\r\n            // const temperatureTokyo = dataTokyo.\r\n            // const humidityTokyo = dataTokyo.\r\n            // const feels_likeTokyo = dataTokyo.\r\n            // const wind_speedTokyo = dataTokyo.\r\n            // const rainTokyo = dataTokyo.\r\n            // const max_temperatureTokyo = dataTokyo.\r\n            // const min_temperatureTokyo = dataTokyo.\r\n\r\n        }\r\n\r\n    })\r\n\r\n\r\n    //Getting the user input:\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    \r\n    const updateUserInput = (e) => {\r\n        setUserInput(e?.target?.value); \r\n    }\r\n\r\n    //Setting the waiting time for user input:\r\n    const debouncedOnChange = debounce(updateUserInput, 600);\r\n\r\n    useEffect(() => {\r\n        const searchTemp = async () => {\r\n        const weatherNewsURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}`;\r\n        const openWeatherURL = `https://api.openweathermap.org/data/2.5/weather?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}&units=metric`;    \r\n        const openMeteoURL = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=Europe%2FLondon`;\r\n\r\n        \r\n            const results1 = await fetch(openMeteoURL);\r\n            const data1 = await results1.json();\r\n            console.log('Data from open-meteo: ', data1); \r\n\r\n            const temperature = Math.round(data1.current.temperature_2m);\r\n            const humidity = Math.round(data1.current.relative_humidity_2m);\r\n            const feels_like = Math.round(data1.current.apparent_temperature);\r\n            const wind_speed = data1.current.wind_speed_10m;\r\n            const rain = data1.current.rain;\r\n            \r\n            const results2 = await fetch(openWeatherURL);\r\n            const data2 = await results2.json();\r\n            console.log('Data from openWeather: ', data2)\r\n            \r\n            const max_temperature = Math.round(data2.main.temp_max);\r\n            const min_temperature = Math.floor(data2.main.temp_min);\r\n            const icon = data2.weather[0].icon;\r\n\r\n            const result3 = await fetch(weatherNewsURL);\r\n            const data3 = await result3.json();\r\n            console.log('news: ', data3);\r\n           \r\n\r\n        setWeather({\r\n            temperature: temperature,\r\n            humidity: humidity,\r\n            feels_like: feels_like,\r\n            wind_speed: wind_speed,\r\n            rain: rain,\r\n            max_temperature: max_temperature,\r\n            min_temperature: min_temperature,\r\n            icon: `http://openweathermap.org/img/wn/${icon}@4x.png`\r\n        });\r\n    };\r\n    searchTemp();\r\n    \r\n}, [clickedCityData]);\r\n\r\n//Here I take the geoLocation data.\r\n\r\n    useEffect(() => {\r\n        const search = async () => {\r\n            const URL = `https://geocoding-api.open-meteo.com/v1/search?name=${userInput}&count=5&language=en&format=json`\r\n            const results = await fetch(URL);\r\n            const data = await results.json();\r\n            console.log('Data from second useEffect: ', data.results);\r\n\r\n            setGeoLocation(data.results);                                         \r\n        }\r\n        search();\r\n    }, [userInput]);\r\n\r\n//Here i get the clicked city geolocation info\r\n\r\n   const handleClick = (e) => {\r\n       const li = e.target;\r\n       const data = li.dataset;  // Access the dataset of the clicked element\r\n       console.log('dataset: ',li.dataset)\r\n\r\n       setClickedCityData({lat: data.lat, lon: data.lon, city: data.city, country: data.country});\r\n       setShowWeather(true);\r\n\r\n   }\r\n\r\n   function handleSpanClick(event) {\r\n    event.stopPropagation();\r\n    const li = event.target.parentNode;\r\n    const data = li.dataset;\r\n    setClickedCityData({lat: data.lat, lon: data.lon, city: data.city, country: data.country});\r\n    setShowWeather(true);\r\n  }\r\n\r\n    const buttonClick = () => {\r\n        setShowWeather(false);\r\n    }\r\n\r\nreturn (\r\n\r\n        <div className=\"app__container\">\r\n\r\n            {showWeather ? (\r\n                <div className=\"app__show-weather \">\r\n\r\n                        <div id=\"weather\" className=\"flex__center\">\r\n                            <img src={weather.icon} alt=\"icon\" id=\"icon\" />\r\n                            <h1 className=\"app__degree\">{weather.temperature}&deg;C</h1>\r\n                            <p>{}</p>\r\n                            <h2 id=\"city\">{clickedCityData.city} {clickedCityData.country}</h2>\r\n                            <button className=\"btn__change-city btn\" onClick={buttonClick} id=\"change\">Change City</button>\r\n\r\n                            <div className=\"info\">\r\n\r\n                                <div className=\"value\">\r\n                                    <h3>Wind</h3>\r\n                                    <div id=\"windValue\" ><p>{weather.wind_speed} Km/h</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>Feels Like</h3>\r\n                                    <div id=\"feelsLikeValue\" ><p>{weather.feels_like}&deg;C</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>Humidity</h3>\r\n                                    <div id=\"humidityValue\" ><p>{weather.humidity}%</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>Chance of Rain</h3>\r\n                                    <div id=\"rainValue\" ><p>{weather.rain}%</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>MaxTemperature</h3>\r\n                                    <div id=\"max-temp-Value\" ><p>{weather.max_temperature}&deg;C</p></div> \r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>MinTemperature</h3>\r\n                                    <div id=\"min-temp-Value\" ><p>{weather.min_temperature}&deg;C</p></div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                </div>\r\n\r\n\r\n\r\n            ) : (\r\n                <div className=\"app__cities-and-form\" >\r\n\r\n                    <h4 className=\"app__top-header\">Weather App Built by V. Pinteac</h4>\r\n\r\n                    <div className=\"app__big-cities form-and-cities-together\">\r\n                    <div className=\"app__city\">\r\n                        <City\r\n                            city=\"London\"\r\n                            country=\"GB\"\r\n                            icon=\"icon\"\r\n                            temperature={25}\r\n                            feels_like={22}\r\n                            humidity={70}\r\n                            rain={10}\r\n                            max_temperature={30}\r\n                            min_temperature={20}\r\n                            wind={15}\r\n                        />\r\n                    </div>\r\n                    <div className=\"app__city\">\r\n                        <City\r\n                            city=\"London\"\r\n                            country=\"GB\"\r\n                            icon=\"icon\"\r\n                            temperature={25}\r\n                            feels_like={22}\r\n                            humidity={70}\r\n                            rain={10}\r\n                            max_temperature={30}\r\n                            min_temperature={20}\r\n                            wind={15}\r\n                        />\r\n                    </div>\r\n                    <div className=\"app__city\">\r\n                        <City\r\n                            city=\"London\"\r\n                            country=\"GB\"\r\n                            icon=\"icon\"\r\n                            temperature={25}\r\n                            feels_like={22}\r\n                            humidity={70}\r\n                            rain={10}\r\n                            max_temperature={30}\r\n                            min_temperature={20}\r\n                            wind={15}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"app__form form-cities-together\">\r\n                        <form >\r\n                            <input className=\"input__field\" onChange={debouncedOnChange} type=\"text\" placeholder=\"Search City...\" />\r\n\r\n                            {geoLocation ? (\r\n                                <ul onClick={handleClick}>\r\n                                    {geoLocation.map(({name, latitude, longitude, country}, index) => (\r\n                                        <li className=\"app__list-item\"\r\n                                        key={index}\r\n                                        data-lat={latitude}\r\n                                        data-lon={longitude}\r\n                                        data-city={name}\r\n                                        data-country={country}\r\n                                        >\r\n                                        {name} <span onClick={handleSpanClick}>{country}</span>\r\n                                        \r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>Waiting...</p>\r\n                            )\r\n                            \r\n                            }\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            )}\r\n\r\n            <div className=\"twitter__container\">\r\n                <div className=\"twitter__heading\"><h1>Netherland News</h1></div>\r\n\r\n                <div className=\"twitter__element\">\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"https://twitter.com/NL_Times?ref_src=twsrc%5Etfw\"\r\n                    screenName=\"NL_Times\"\r\n                    options={{ height: 500, width: 600 }}\r\n                />\r\n                </div>\r\n                \r\n                <div className=\"twitter__element\">\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"https://twitter.com/KNMI?ref_src=twsrc%5Etfw\"\r\n                    screenName=\"KNMI\"\r\n                    options={{ height: 500, width: 600 }}\r\n                />               \r\n                </div>\r\n\r\n                <div className=\"twitter__element\">\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"https://twitter.com/DutchNewsNL?ref_src=twsrc%5Etfw\"\r\n                    screenName=\"DutchNewsNL\"\r\n                    options={{ height: 500, width: 600 }}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"twitter__element\">\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"https://twitter.com/accuweather?ref_src=twsrc%5Etfw\"\r\n                    screenName=\"Accuweather\"\r\n                    options={{ height: 500, width: 600 }}\r\n                />\r\n                </div>\r\n\r\n            \r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n       )\r\n}\r\n\r\n\r\nexport default WeatherScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}