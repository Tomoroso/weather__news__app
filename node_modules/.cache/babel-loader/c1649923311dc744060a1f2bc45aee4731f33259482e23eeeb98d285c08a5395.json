{"ast":null,"code":"var _jsxFileName = \"F:\\\\The Complete 2023 Web Development Bootcamp\\\\STUDY-PROJECTS\\\\YoutubeProjects\\\\weather_app\\\\src\\\\components\\\\WeatherScreen\\\\WeatherScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport debounce from 'lodash.debounce';\nimport './weatherScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherScreen = () => {\n  _s();\n  const key = '1d57fcba75368cc323dc71241f670c5d';\n  const [showWeather, setShowWeather] = useState(false);\n  const [weatherType, setWeatherType] = useState(0);\n  const [image, setImage] = useState('');\n  console.log('image: ', image);\n  console.log('code: ', weatherType);\n  const [weather, setWeather] = useState({\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0,\n    icon: ''\n  });\n  const [geoLocation, setGeoLocation] = useState([]);\n  const [clickedCityData, setClickedCityData] = useState({\n    lat: 0,\n    lon: 0,\n    city: '',\n    country: ''\n  });\n  //Getting the weather image according to weather type:\n\n  useEffect(() => {\n    handleWeatherType(weatherType, weather.rain);\n  }, [weatherType, weather]);\n  console.log(\"chance of rain: \", weather.rain);\n  const handleWeatherType = (weatherCode, chanceOfRain) => {\n    let imagePath = '';\n    if (weatherCode === 0) {\n      imagePath = 'images/sunny.png';\n    } else if (weatherCode === 1 || weatherCode === 2 || weatherCode === 3) {\n      imagePath = 'images/partly-cloudy.png';\n    } else if (weatherCode === 45 || weatherCode === 48) {\n      imagePath = 'images/fog.png';\n    } else if (weatherCode === 51 || weatherCode === 53 || weatherCode === 55) {\n      imagePath = 'images/drizzle.png';\n    } else if (weatherCode === 56 || weatherCode === 57) {\n      imagePath = 'images/freezing-drizzle.png';\n    } else if (weatherCode === 61 || weatherCode === 63 || weatherCode === 65) {\n      imagePath = 'images/rain.png';\n    } else if (weatherCode === 66 || weatherCode === 67) {\n      imagePath = 'images/freezing-rain.png';\n    } else if (weatherCode === 71 || weatherCode === 73 || weatherCode === 75) {\n      imagePath = 'images/snowfall.png';\n    } else if (weatherCode === 77) {\n      imagePath = 'images/snow-grains.png';\n    } else if (weatherCode === 80 || weatherCode === 81 || weatherCode === 82) {\n      if (chanceOfRain === 0) {\n        imagePath = 'images/cloudy.png';\n      } else {\n        imagePath = 'images/showers.png';\n      }\n    } else if (weatherCode === 85 || weatherCode === 86) {\n      imagePath = 'images/snow-shower.png';\n    } else if (weatherCode === 95) {\n      imagePath = 'images/thunderstorm.png';\n    } else if (weatherCode === 96 || weatherCode === 99) {\n      imagePath = 'images/thunderstorm-with-hail.png';\n    } else {\n      // Default image path if none of the conditions match\n      imagePath = 'images/default.png';\n    }\n    setImage(imagePath);\n  };\n\n  //Getting the user input:\n  const [userInput, setUserInput] = useState(\"\");\n  const updateUserInput = e => {\n    var _e$target;\n    setUserInput(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n  };\n\n  //Setting the waiting time for user input:\n  const debouncedOnChange = debounce(updateUserInput, 600);\n  useEffect(() => {\n    const searchTemp = async () => {\n      const openWeatherURL = `https://api.openweathermap.org/data/2.5/weather?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}&units=metric`;\n      const openMeteoURL = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=GMT`;\n\n      // const tempURL_2 = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,showers,snowfall,weather_code,cloud_cover,\n      // pressure_msl,surface_pressure,wind_speed_10m,wind_direction_10m,wind_gusts_10m&hourly=temperature_2m,relative_humidity_2m,dew_point_2m,apparent_temperature,precipitation,rain,showers,snowfall,snow_depth,weather_code,pressure_msl,surface_pressure,\n      // cloud_cover,cloud_cover_low,cloud_cover_mid,cloud_cover_high,evapotranspiration,et0_fao_evapotranspiration,vapour_pressure_deficit,wind_speed_10m,wind_speed_80m,wind_speed_120m,wind_speed_180m,wind_direction_10m,wind_direction_80m,wind_direction_120m,\n      // wind_direction_180m,wind_gusts_10m,temperature_80m,temperature_120m,temperature_180m,soil_temperature_0cm,soil_temperature_6cm,soil_temperature_18cm,soil_temperature_54cm,soil_moisture_0_to_1cm,soil_moisture_1_to_3cm,soil_moisture_3_to_9cm,soil_moisture_9_to_27cm,\n      // soil_moisture_27_to_81cm,is_day,lightning_potential,updraft,cape,freezing_level_height,snowfall_height,sunshine_duration&daily=weather_code,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,daylight_duration,\n      // sunshine_duration,precipitation_sum,rain_sum,showers_sum,snowfall_sum,precipitation_hours,precipitation_probability_max,wind_speed_10m_max,wind_gusts_10m_max,wind_direction_10m_dominant,shortwave_radiation_sum,et0_fao_evapotranspiration&minutely_15=precipitation,rain,\n      // snowfall,snowfall_height,freezing_level_height,cape,lightning_potential,is_day,sunshine_duration,shortwave_radiation,direct_radiation,diffuse_radiation,direct_normal_irradiance,global_tilted_irradiance,shortwave_radiation_instant,direct_radiation_instant,diffuse_radiation_instant,\n      // direct_normal_irradiance_instant,global_tilted_irradiance_instant,terrestrial_radiation_instant&timezone=Europe%2FLondon`\n\n      const results1 = await fetch(openMeteoURL);\n      const data1 = await results1.json();\n      console.log('Data from open-meteo: ', data1);\n      const temperature = Math.round(data1.current.temperature_2m);\n      const humidity = Math.round(data1.current.relative_humidity_2m);\n      const feels_like = Math.round(data1.current.apparent_temperature);\n      const wind_speed = data1.current.wind_speed_10m;\n      const rain = data1.current.rain;\n      const max_temperature = Math.floor(data1.daily.temperature_2m_max[0]);\n      const min_temperature = Math.floor(Math.min(...data1.daily.temperature_2m_min));\n      const results2 = await fetch(openWeatherURL);\n      const data2 = await results2.json();\n      console.log('Data from open-meteo: ', data2);\n      const icon = data2.weather[0].icon;\n      console.log('Indide useEffect Icon: ', typeof icon);\n      setWeather({\n        temperature: temperature,\n        humidity: humidity,\n        feels_like: feels_like,\n        wind_speed: wind_speed,\n        rain: rain,\n        max_temperature: max_temperature,\n        min_temperature: min_temperature,\n        icon: icon\n      });\n    };\n    searchTemp();\n  }, [clickedCityData]);\n  console.log('Icon: ', typeof weather.icon);\n  //Here I take the geoLocation data.\n\n  useEffect(() => {\n    const search = async () => {\n      const URL = `https://geocoding-api.open-meteo.com/v1/search?name=${userInput}&count=5&language=en&format=json`;\n      const results = await fetch(URL);\n      const data = await results.json();\n      console.log('Data from second useEffect: ', data.results);\n      setGeoLocation(data.results);\n    };\n    search();\n  }, [userInput]);\n\n  //Here i get the clicked city geolocation info\n\n  const handleClick = e => {\n    const li = e.target;\n    const data = li.dataset; // Access the dataset of the clicked element\n    console.log('dataset: ', li.dataset);\n    setClickedCityData({\n      lat: data.lat,\n      lon: data.lon,\n      city: data.city,\n      country: data.country\n    });\n    setShowWeather(true);\n  };\n  function handleSpanClick(event) {\n    event.stopPropagation();\n    const li = event.target.parentNode;\n    const data = li.dataset;\n    setClickedCityData({\n      lat: data.lat,\n      lon: data.lon,\n      city: data.city,\n      country: data.country\n    });\n    setShowWeather(true);\n    // Perform any necessary actions with the clicked span data\n  }\n  const buttonClick = () => {\n    setShowWeather(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__container\",\n    children: showWeather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__show-weather \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"weather\",\n        className: \"flex__center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: weather.icon,\n          alt: \"icon\",\n          id: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app__degree\",\n          children: [weather.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"city\",\n          children: [clickedCityData.city, \" \", clickedCityData.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__change-city btn\",\n          onClick: buttonClick,\n          id: \"change\",\n          children: \"Change City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"windValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.wind_speed, \" Km/h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Feels Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"feelsLikeValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.feels_like, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"humidityValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Chance of Rain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"rainValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.rain, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"MaxTemperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"max-temp-Value\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.max_temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"MinTemperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"min-temp-Value\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.min_temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input__field\",\n          onChange: debouncedOnChange,\n          type: \"text\",\n          placeholder: \"Search City...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), geoLocation ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          onClick: handleClick,\n          children: geoLocation.map(({\n            name,\n            latitude,\n            longitude,\n            country\n          }, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"app__list-item\",\n            \"data-lat\": latitude,\n            \"data-lon\": longitude,\n            \"data-city\": name,\n            \"data-country\": country,\n            children: [name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: handleSpanClick,\n              children: country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 44\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waiting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherScreen, \"jksfCy1bsA/bc3Ug+ZrYAtG+O/M=\");\n_c = WeatherScreen;\nexport default WeatherScreen;\nvar _c;\n$RefreshReg$(_c, \"WeatherScreen\");","map":{"version":3,"names":["React","useState","useEffect","debounce","jsxDEV","_jsxDEV","WeatherScreen","_s","key","showWeather","setShowWeather","weatherType","setWeatherType","image","setImage","console","log","weather","setWeather","temperature","humidity","feels_like","wind_speed","rain","max_temperature","min_temperature","icon","geoLocation","setGeoLocation","clickedCityData","setClickedCityData","lat","lon","city","country","handleWeatherType","weatherCode","chanceOfRain","imagePath","userInput","setUserInput","updateUserInput","e","_e$target","target","value","debouncedOnChange","searchTemp","openWeatherURL","openMeteoURL","results1","fetch","data1","json","Math","round","current","temperature_2m","relative_humidity_2m","apparent_temperature","wind_speed_10m","floor","daily","temperature_2m_max","min","temperature_2m_min","results2","data2","search","URL","results","data","handleClick","li","dataset","handleSpanClick","event","stopPropagation","parentNode","buttonClick","className","children","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","type","placeholder","map","name","latitude","longitude","index","_c","$RefreshReg$"],"sources":["F:/The Complete 2023 Web Development Bootcamp/STUDY-PROJECTS/YoutubeProjects/weather_app/src/components/WeatherScreen/WeatherScreen.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport debounce from 'lodash.debounce';\r\n\r\n\r\n\r\nimport './weatherScreen.css'\r\nconst WeatherScreen = () => {\r\n  const key = '1d57fcba75368cc323dc71241f670c5d';\r\n    const [showWeather, setShowWeather] = useState(false);\r\n    const [weatherType, setWeatherType] = useState(0);\r\n    const [image, setImage] = useState('');\r\n\r\n\r\n    console.log('image: ',image);\r\n    console.log('code: ', weatherType);\r\n    const [weather, setWeather] = useState({\r\n        temperature: 0,\r\n        humidity: 0,\r\n        feels_like: 0,\r\n        wind_speed: 0,\r\n        rain: 0,\r\n        max_temperature: 0,\r\n        min_temperature: 0,\r\n        icon: ''\r\n    });\r\n    const [geoLocation, setGeoLocation] = useState([]);\r\n    const [clickedCityData, setClickedCityData] = useState({\r\n        lat: 0,\r\n        lon: 0,\r\n        city: '',\r\n        country: ''\r\n    });\r\n//Getting the weather image according to weather type:\r\n\r\nuseEffect(() => {\r\n    handleWeatherType(weatherType, weather.rain);\r\n  }, [weatherType, weather]);\r\n\r\n  console.log(\"chance of rain: \", weather.rain);\r\n\r\n  const handleWeatherType = (weatherCode, chanceOfRain) => {\r\n    let imagePath = '';\r\n    \r\n    if (weatherCode === 0) {\r\n        imagePath = 'images/sunny.png';\r\n      } else if (weatherCode === 1 || weatherCode === 2 || weatherCode === 3) {\r\n        imagePath = 'images/partly-cloudy.png';\r\n      } else if (weatherCode === 45 || weatherCode === 48) {\r\n        imagePath = 'images/fog.png';\r\n      } else if (weatherCode === 51 || weatherCode === 53 || weatherCode === 55) {\r\n        imagePath = 'images/drizzle.png';\r\n      } else if (weatherCode === 56 || weatherCode === 57) {\r\n        imagePath = 'images/freezing-drizzle.png';\r\n      } else if (weatherCode === 61 || weatherCode === 63 || weatherCode === 65) {\r\n        imagePath = 'images/rain.png';\r\n      } else if (weatherCode === 66 || weatherCode === 67) {\r\n        imagePath = 'images/freezing-rain.png';\r\n      } else if (weatherCode === 71 || weatherCode === 73 || weatherCode === 75) {\r\n        imagePath = 'images/snowfall.png';\r\n      } else if (weatherCode === 77) {\r\n        imagePath = 'images/snow-grains.png';\r\n      } else if (weatherCode === 80 || weatherCode === 81 || weatherCode === 82) {\r\n          if (chanceOfRain === 0) {\r\n            imagePath = 'images/cloudy.png';\r\n          } else {\r\n            imagePath = 'images/showers.png';\r\n          }\r\n      } else if (weatherCode === 85 || weatherCode === 86) {\r\n        imagePath = 'images/snow-shower.png';\r\n      } else if (weatherCode === 95) {\r\n        imagePath = 'images/thunderstorm.png';\r\n      } else if (weatherCode === 96 || weatherCode === 99) {\r\n        imagePath = 'images/thunderstorm-with-hail.png';\r\n      } else {\r\n        // Default image path if none of the conditions match\r\n        imagePath = 'images/default.png';\r\n      }\r\n\r\n    setImage(imagePath);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //Getting the user input:\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    \r\n    const updateUserInput = (e) => {\r\n        setUserInput(e?.target?.value); \r\n    }\r\n\r\n    //Setting the waiting time for user input:\r\n    const debouncedOnChange = debounce(updateUserInput, 600);\r\n\r\n    useEffect(() => {\r\n        const searchTemp = async () => {\r\n        const openWeatherURL = `https://api.openweathermap.org/data/2.5/weather?lat=${clickedCityData.lat}&lon=${clickedCityData.lon}&appid=${key}&units=metric`;    \r\n        const openMeteoURL = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=GMT`;\r\n\r\n        // const tempURL_2 = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,showers,snowfall,weather_code,cloud_cover,\r\n        // pressure_msl,surface_pressure,wind_speed_10m,wind_direction_10m,wind_gusts_10m&hourly=temperature_2m,relative_humidity_2m,dew_point_2m,apparent_temperature,precipitation,rain,showers,snowfall,snow_depth,weather_code,pressure_msl,surface_pressure,\r\n        // cloud_cover,cloud_cover_low,cloud_cover_mid,cloud_cover_high,evapotranspiration,et0_fao_evapotranspiration,vapour_pressure_deficit,wind_speed_10m,wind_speed_80m,wind_speed_120m,wind_speed_180m,wind_direction_10m,wind_direction_80m,wind_direction_120m,\r\n        // wind_direction_180m,wind_gusts_10m,temperature_80m,temperature_120m,temperature_180m,soil_temperature_0cm,soil_temperature_6cm,soil_temperature_18cm,soil_temperature_54cm,soil_moisture_0_to_1cm,soil_moisture_1_to_3cm,soil_moisture_3_to_9cm,soil_moisture_9_to_27cm,\r\n        // soil_moisture_27_to_81cm,is_day,lightning_potential,updraft,cape,freezing_level_height,snowfall_height,sunshine_duration&daily=weather_code,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,daylight_duration,\r\n        // sunshine_duration,precipitation_sum,rain_sum,showers_sum,snowfall_sum,precipitation_hours,precipitation_probability_max,wind_speed_10m_max,wind_gusts_10m_max,wind_direction_10m_dominant,shortwave_radiation_sum,et0_fao_evapotranspiration&minutely_15=precipitation,rain,\r\n        // snowfall,snowfall_height,freezing_level_height,cape,lightning_potential,is_day,sunshine_duration,shortwave_radiation,direct_radiation,diffuse_radiation,direct_normal_irradiance,global_tilted_irradiance,shortwave_radiation_instant,direct_radiation_instant,diffuse_radiation_instant,\r\n        // direct_normal_irradiance_instant,global_tilted_irradiance_instant,terrestrial_radiation_instant&timezone=Europe%2FLondon`\r\n        \r\n            const results1 = await fetch(openMeteoURL);\r\n            const data1 = await results1.json();\r\n            console.log('Data from open-meteo: ', data1); \r\n\r\n            const temperature = Math.round(data1.current.temperature_2m);\r\n            const humidity = Math.round(data1.current.relative_humidity_2m);\r\n            const feels_like = Math.round(data1.current.apparent_temperature);\r\n            const wind_speed = data1.current.wind_speed_10m;\r\n            const rain = data1.current.rain;\r\n            const max_temperature = Math.floor(data1.daily.temperature_2m_max[0]);\r\n            const min_temperature = Math.floor(Math.min(...data1.daily.temperature_2m_min));\r\n\r\n            const results2 = await fetch(openWeatherURL);\r\n            const data2 = await results2.json();\r\n            console.log('Data from open-meteo: ', data2); \r\n\r\n            const icon = data2.weather[0].icon;\r\n            console.log('Indide useEffect Icon: ', typeof icon);\r\n           \r\n\r\n\r\n        setWeather({\r\n            temperature: temperature,\r\n            humidity: humidity,\r\n            feels_like: feels_like,\r\n            wind_speed: wind_speed,\r\n            rain: rain,\r\n            max_temperature: max_temperature,\r\n            min_temperature: min_temperature,\r\n            icon: icon\r\n        });\r\n    };\r\n    searchTemp();\r\n    \r\n}, [clickedCityData]);\r\n\r\nconsole.log('Icon: ', typeof weather.icon);\r\n//Here I take the geoLocation data.\r\n\r\n    useEffect(() => {\r\n        const search = async () => {\r\n            const URL = `https://geocoding-api.open-meteo.com/v1/search?name=${userInput}&count=5&language=en&format=json`\r\n            const results = await fetch(URL);\r\n            const data = await results.json();\r\n            console.log('Data from second useEffect: ', data.results);\r\n\r\n            setGeoLocation(data.results);                                         \r\n        }\r\n        search();\r\n    }, [userInput]);\r\n\r\n//Here i get the clicked city geolocation info\r\n\r\n   const handleClick = (e) => {\r\n       const li = e.target;\r\n       const data = li.dataset;  // Access the dataset of the clicked element\r\n       console.log('dataset: ',li.dataset)\r\n\r\n       setClickedCityData({lat: data.lat, lon: data.lon, city: data.city, country: data.country});\r\n       setShowWeather(true);\r\n\r\n   }\r\n\r\n   function handleSpanClick(event) {\r\n    event.stopPropagation();\r\n    const li = event.target.parentNode;\r\n    const data = li.dataset;\r\n    setClickedCityData({lat: data.lat, lon: data.lon, city: data.city, country: data.country});\r\n    setShowWeather(true);\r\n    // Perform any necessary actions with the clicked span data\r\n  }\r\n\r\n    const buttonClick = () => {\r\n        setShowWeather(false);\r\n    }\r\n\r\nreturn (\r\n\r\n        <div className=\"app__container\">\r\n\r\n            {showWeather ? (\r\n                <div className=\"app__show-weather \">\r\n\r\n                        <div id=\"weather\" className=\"flex__center\">\r\n                            <img src={weather.icon} alt=\"icon\" id=\"icon\" />\r\n                            <h1 className=\"app__degree\">{weather.temperature}&deg;C</h1>\r\n                            <p>{}</p>\r\n                            <h2 id=\"city\">{clickedCityData.city} {clickedCityData.country}</h2>\r\n                            <button className=\"btn__change-city btn\" onClick={buttonClick} id=\"change\">Change City</button>\r\n\r\n                            <div className=\"info\">\r\n\r\n                                <div className=\"value\">\r\n                                    <h3>Wind</h3>\r\n                                    <div id=\"windValue\" ><p>{weather.wind_speed} Km/h</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>Feels Like</h3>\r\n                                    <div id=\"feelsLikeValue\" ><p>{weather.feels_like}&deg;C</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>Humidity</h3>\r\n                                    <div id=\"humidityValue\" ><p>{weather.humidity}%</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>Chance of Rain</h3>\r\n                                    <div id=\"rainValue\" ><p>{weather.rain}%</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>MaxTemperature</h3>\r\n                                    <div id=\"max-temp-Value\" ><p>{weather.max_temperature}&deg;C</p></div> \r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>MinTemperature</h3>\r\n                                    <div id=\"min-temp-Value\" ><p>{weather.min_temperature}&deg;C</p></div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                </div>\r\n\r\n\r\n\r\n            ) : (\r\n                <div  className=\"app__form-container\">\r\n                    <form >\r\n                        <input className=\"input__field\" onChange={debouncedOnChange} type=\"text\" placeholder=\"Search City...\" />\r\n\r\n                        {geoLocation ? (\r\n                            <ul onClick={handleClick}>\r\n                                {geoLocation.map(({name, latitude, longitude, country}, index) => (\r\n                                    <li className=\"app__list-item\"\r\n                                    key={index}\r\n                                    data-lat={latitude}\r\n                                    data-lon={longitude}\r\n                                    data-city={name}\r\n                                    data-country={country}\r\n                                    >\r\n                                    {name} <span onClick={handleSpanClick}>{country}</span>\r\n                                    \r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Waiting...</p>\r\n                        )\r\n                        \r\n                        }\r\n                    </form>\r\n                </div>\r\n\r\n            )}\r\n\r\n        </div>\r\n\r\n       )\r\n}\r\n\r\n\r\nexport default WeatherScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}