{"ast":null,"code":"var _jsxFileName = \"F:\\\\The Complete 2023 Web Development Bootcamp\\\\STUDY-PROJECTS\\\\YoutubeProjects\\\\weather_app\\\\src\\\\components\\\\WeatherScreen\\\\WeatherScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport debounce from 'lodash.debounce';\nimport './weatherScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherScreen = () => {\n  _s();\n  const [showWeather, setShowWeather] = useState(false);\n  const [weatherType, setWeatherType] = useState(0);\n  const [image, setImage] = useState('');\n  console.log('image: ', image);\n  console.log('code: ', weatherType);\n  const [weather, setWeather] = useState({\n    temperature: 0,\n    humidity: 0,\n    feels_like: 0,\n    wind_speed: 0,\n    rain: 0,\n    max_temperature: 0,\n    min_temperature: 0\n  });\n  const [geoLocation, setGeoLocation] = useState([]);\n  const [clickedCityData, setClickedCityData] = useState({\n    lat: 0,\n    lon: 0,\n    city: '',\n    country: ''\n  });\n  //Getting the weather image according to weather type:\n\n  useEffect(() => {\n    handleWeatherType(weatherType);\n  }, []);\n  const handleWeatherType = weatherCode => {\n    let imagePath = '';\n    if (weatherCode === 0) {\n      imagePath = 'images/sunny.png';\n    } else if (weatherCode === 1 || weatherCode === 2 || weatherCode === 3) {\n      imagePath = 'images/partly-cloudy.png';\n    } else if (weatherCode === 80 || weatherCode === 81 || weatherCode === 82) {\n      imagePath = 'images/partly-cloudy.png';\n    }\n    setImage(imagePath);\n  };\n\n  //Getting the user input:\n  const [userInput, setUserInput] = useState(\"\");\n  const updateUserInput = e => {\n    var _e$target;\n    setUserInput(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n  };\n\n  //Setting the waiting time for user input:\n  const debouncedOnChange = debounce(updateUserInput, 600);\n  useEffect(() => {\n    const searchTemp = async () => {\n      const tempURL = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=GMT`;\n\n      // const tempURL_2 = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,showers,snowfall,weather_code,cloud_cover,\n      // pressure_msl,surface_pressure,wind_speed_10m,wind_direction_10m,wind_gusts_10m&hourly=temperature_2m,relative_humidity_2m,dew_point_2m,apparent_temperature,precipitation,rain,showers,snowfall,snow_depth,weather_code,pressure_msl,surface_pressure,\n      // cloud_cover,cloud_cover_low,cloud_cover_mid,cloud_cover_high,evapotranspiration,et0_fao_evapotranspiration,vapour_pressure_deficit,wind_speed_10m,wind_speed_80m,wind_speed_120m,wind_speed_180m,wind_direction_10m,wind_direction_80m,wind_direction_120m,\n      // wind_direction_180m,wind_gusts_10m,temperature_80m,temperature_120m,temperature_180m,soil_temperature_0cm,soil_temperature_6cm,soil_temperature_18cm,soil_temperature_54cm,soil_moisture_0_to_1cm,soil_moisture_1_to_3cm,soil_moisture_3_to_9cm,soil_moisture_9_to_27cm,\n      // soil_moisture_27_to_81cm,is_day,lightning_potential,updraft,cape,freezing_level_height,snowfall_height,sunshine_duration&daily=weather_code,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,daylight_duration,\n      // sunshine_duration,precipitation_sum,rain_sum,showers_sum,snowfall_sum,precipitation_hours,precipitation_probability_max,wind_speed_10m_max,wind_gusts_10m_max,wind_direction_10m_dominant,shortwave_radiation_sum,et0_fao_evapotranspiration&minutely_15=precipitation,rain,\n      // snowfall,snowfall_height,freezing_level_height,cape,lightning_potential,is_day,sunshine_duration,shortwave_radiation,direct_radiation,diffuse_radiation,direct_normal_irradiance,global_tilted_irradiance,shortwave_radiation_instant,direct_radiation_instant,diffuse_radiation_instant,\n      // direct_normal_irradiance_instant,global_tilted_irradiance_instant,terrestrial_radiation_instant&timezone=Europe%2FLondon`\n\n      const results = await fetch(tempURL);\n      const data = await results.json();\n      console.log('Data from first useEffect:  ', data);\n      const temperature = Math.round(data.current.temperature_2m);\n      const humidity = Math.round(data.current.relative_humidity_2m);\n      const feels_like = Math.round(data.current.apparent_temperature);\n      const wind_speed = data.current.wind_speed_10m;\n      const rain = data.current.rain;\n      const max_temperature = Math.floor(data.daily.temperature_2m_max[0]);\n      const min_temperature = Math.floor(Math.min(...data.daily.temperature_2m_min));\n      const weatherCode = data.daily.weather_code;\n      weatherCode.map(item => {\n        console.log('Map trough weathercode', item);\n      });\n      setWeatherType(weatherCode[0]);\n      setWeather({\n        temperature: temperature,\n        humidity: humidity,\n        feels_like: feels_like,\n        wind_speed: wind_speed,\n        rain: rain,\n        max_temperature: max_temperature,\n        min_temperature: min_temperature\n      });\n    };\n    searchTemp();\n  }, [clickedCityData]);\n\n  //Here I take the geoLocation data.\n\n  useEffect(() => {\n    const search = async () => {\n      const URL = `https://geocoding-api.open-meteo.com/v1/search?name=${userInput}&count=5&language=en&format=json`;\n      const results = await fetch(URL);\n      const data = await results.json();\n      console.log('Data from second useEffect: ', data.results);\n      setGeoLocation(data.results);\n    };\n    search();\n  }, [userInput]);\n\n  //Here i get the clicked city geolocation info\n\n  const handleClick = e => {\n    const li = e.target;\n    const data = li.dataset; // Access the dataset of the clicked element\n    console.log('dataset: ', li.dataset);\n    setClickedCityData({\n      lat: data.lat,\n      lon: data.lon,\n      city: data.city,\n      country: data.country\n    });\n    setShowWeather(true);\n  };\n  function handleSpanClick(event) {\n    event.stopPropagation();\n    const li = event.target.parentNode;\n    const data = li.dataset;\n    setClickedCityData({\n      lat: data.lat,\n      lon: data.lon,\n      city: data.city,\n      country: data.country\n    });\n    setShowWeather(true);\n    // Perform any necessary actions with the clicked span data\n  }\n  const buttonClick = () => {\n    setShowWeather(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__container\",\n    children: showWeather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__show-weather \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"weather\",\n        className: \"flex__center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"icon\",\n          id: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app__degree\",\n          children: [weather.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"city\",\n          children: [clickedCityData.city, \" \", clickedCityData.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__change-city btn\",\n          onClick: buttonClick,\n          id: \"change\",\n          children: \"Change City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"windValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.wind_speed, \" Km/h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Feels Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"feelsLikeValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.feels_like, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"humidityValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Chance of Rain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"rainValue\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.rain, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"MaxTemperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"max-temp-Value\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.max_temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"MinTemperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"min-temp-Value\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [weather.min_temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input__field\",\n          onChange: debouncedOnChange,\n          type: \"text\",\n          placeholder: \"Search City...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), geoLocation ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          onClick: handleClick,\n          children: geoLocation.map(({\n            name,\n            latitude,\n            longitude,\n            country\n          }, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"app__list-item\",\n            \"data-lat\": latitude,\n            \"data-lon\": longitude,\n            \"data-city\": name,\n            \"data-country\": country,\n            children: [name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: handleSpanClick,\n              children: country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 44\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waiting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherScreen, \"qNescXZFa1np2GigjwFKM0mFjuI=\");\n_c = WeatherScreen;\nexport default WeatherScreen;\nvar _c;\n$RefreshReg$(_c, \"WeatherScreen\");","map":{"version":3,"names":["React","useState","useEffect","debounce","jsxDEV","_jsxDEV","WeatherScreen","_s","showWeather","setShowWeather","weatherType","setWeatherType","image","setImage","console","log","weather","setWeather","temperature","humidity","feels_like","wind_speed","rain","max_temperature","min_temperature","geoLocation","setGeoLocation","clickedCityData","setClickedCityData","lat","lon","city","country","handleWeatherType","weatherCode","imagePath","userInput","setUserInput","updateUserInput","e","_e$target","target","value","debouncedOnChange","searchTemp","tempURL","results","fetch","data","json","Math","round","current","temperature_2m","relative_humidity_2m","apparent_temperature","wind_speed_10m","floor","daily","temperature_2m_max","min","temperature_2m_min","weather_code","map","item","search","URL","handleClick","li","dataset","handleSpanClick","event","stopPropagation","parentNode","buttonClick","className","children","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","type","placeholder","name","latitude","longitude","index","_c","$RefreshReg$"],"sources":["F:/The Complete 2023 Web Development Bootcamp/STUDY-PROJECTS/YoutubeProjects/weather_app/src/components/WeatherScreen/WeatherScreen.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport debounce from 'lodash.debounce';\r\n\r\n\r\n\r\nimport './weatherScreen.css'\r\nconst WeatherScreen = () => {\r\n    const [showWeather, setShowWeather] = useState(false);\r\n    const [weatherType, setWeatherType] = useState(0);\r\n    const [image, setImage] = useState('');\r\n\r\n\r\n    console.log('image: ',image);\r\n    console.log('code: ', weatherType);\r\n    const [weather, setWeather] = useState({\r\n        temperature: 0,\r\n        humidity: 0,\r\n        feels_like: 0,\r\n        wind_speed: 0,\r\n        rain: 0,\r\n        max_temperature: 0,\r\n        min_temperature: 0\r\n    });\r\n    const [geoLocation, setGeoLocation] = useState([]);\r\n    const [clickedCityData, setClickedCityData] = useState({\r\n        lat: 0,\r\n        lon: 0,\r\n        city: '',\r\n        country: ''\r\n    });\r\n//Getting the weather image according to weather type:\r\n\r\nuseEffect(() => {\r\n    handleWeatherType(weatherType);\r\n  }, []);\r\n\r\n  const handleWeatherType = (weatherCode) => {\r\n    let imagePath = '';\r\n\r\n    if (weatherCode === 0) {\r\n      imagePath = 'images/sunny.png';\r\n    } else if (weatherCode === 1 || weatherCode === 2 || weatherCode === 3) {\r\n      imagePath = 'images/partly-cloudy.png';\r\n    } else if (weatherCode === 80 || weatherCode === 81 || weatherCode === 82) {\r\n      imagePath = 'images/partly-cloudy.png';\r\n    }\r\n\r\n    setImage(imagePath);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //Getting the user input:\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    \r\n    const updateUserInput = (e) => {\r\n        setUserInput(e?.target?.value); \r\n    }\r\n\r\n    //Setting the waiting time for user input:\r\n    const debouncedOnChange = debounce(updateUserInput, 600);\r\n\r\n    useEffect(() => {\r\n        const searchTemp = async () => {\r\n            \r\n        const tempURL = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation_probability,precipitation,rain,snowfall,visibility,wind_speed_10m,wind_speed_80m,wind_speed_120m&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,daylight_duration,sunshine_duration&daily=weather_code&timezone=GMT`;\r\n\r\n        // const tempURL_2 = `https://api.open-meteo.com/v1/forecast?latitude=${clickedCityData.lat}&longitude=${clickedCityData.lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,showers,snowfall,weather_code,cloud_cover,\r\n        // pressure_msl,surface_pressure,wind_speed_10m,wind_direction_10m,wind_gusts_10m&hourly=temperature_2m,relative_humidity_2m,dew_point_2m,apparent_temperature,precipitation,rain,showers,snowfall,snow_depth,weather_code,pressure_msl,surface_pressure,\r\n        // cloud_cover,cloud_cover_low,cloud_cover_mid,cloud_cover_high,evapotranspiration,et0_fao_evapotranspiration,vapour_pressure_deficit,wind_speed_10m,wind_speed_80m,wind_speed_120m,wind_speed_180m,wind_direction_10m,wind_direction_80m,wind_direction_120m,\r\n        // wind_direction_180m,wind_gusts_10m,temperature_80m,temperature_120m,temperature_180m,soil_temperature_0cm,soil_temperature_6cm,soil_temperature_18cm,soil_temperature_54cm,soil_moisture_0_to_1cm,soil_moisture_1_to_3cm,soil_moisture_3_to_9cm,soil_moisture_9_to_27cm,\r\n        // soil_moisture_27_to_81cm,is_day,lightning_potential,updraft,cape,freezing_level_height,snowfall_height,sunshine_duration&daily=weather_code,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,daylight_duration,\r\n        // sunshine_duration,precipitation_sum,rain_sum,showers_sum,snowfall_sum,precipitation_hours,precipitation_probability_max,wind_speed_10m_max,wind_gusts_10m_max,wind_direction_10m_dominant,shortwave_radiation_sum,et0_fao_evapotranspiration&minutely_15=precipitation,rain,\r\n        // snowfall,snowfall_height,freezing_level_height,cape,lightning_potential,is_day,sunshine_duration,shortwave_radiation,direct_radiation,diffuse_radiation,direct_normal_irradiance,global_tilted_irradiance,shortwave_radiation_instant,direct_radiation_instant,diffuse_radiation_instant,\r\n        // direct_normal_irradiance_instant,global_tilted_irradiance_instant,terrestrial_radiation_instant&timezone=Europe%2FLondon`\r\n        \r\n            const results = await fetch(tempURL);\r\n            const data = await results.json();\r\n            console.log('Data from first useEffect:  ', data); \r\n\r\n            const temperature = Math.round(data.current.temperature_2m);\r\n            const humidity = Math.round(data.current.relative_humidity_2m);\r\n            const feels_like = Math.round(data.current.apparent_temperature);\r\n            const wind_speed = data.current.wind_speed_10m;\r\n            const rain = data.current.rain;\r\n            const max_temperature = Math.floor(data.daily.temperature_2m_max[0]);\r\n            const min_temperature = Math.floor(Math.min(...data.daily.temperature_2m_min));\r\n\r\n            const weatherCode = data.daily.weather_code;\r\n            weatherCode.map((item) => {\r\n                console.log('Map trough weathercode', item)\r\n            })\r\n            setWeatherType(weatherCode[0]);\r\n\r\n\r\n        setWeather({\r\n            temperature: temperature,\r\n            humidity: humidity,\r\n            feels_like: feels_like,\r\n            wind_speed: wind_speed,\r\n            rain: rain,\r\n            max_temperature: max_temperature,\r\n            min_temperature: min_temperature\r\n        });\r\n    };\r\n    searchTemp();\r\n    \r\n}, [clickedCityData]);\r\n\r\n//Here I take the geoLocation data.\r\n\r\n    useEffect(() => {\r\n        const search = async () => {\r\n            const URL = `https://geocoding-api.open-meteo.com/v1/search?name=${userInput}&count=5&language=en&format=json`\r\n            const results = await fetch(URL);\r\n            const data = await results.json();\r\n            console.log('Data from second useEffect: ', data.results);\r\n\r\n            setGeoLocation(data.results);                                         \r\n        }\r\n        search();\r\n    }, [userInput]);\r\n\r\n//Here i get the clicked city geolocation info\r\n\r\n   const handleClick = (e) => {\r\n       const li = e.target;\r\n       const data = li.dataset;  // Access the dataset of the clicked element\r\n       console.log('dataset: ',li.dataset)\r\n\r\n       setClickedCityData({lat: data.lat, lon: data.lon, city: data.city, country: data.country});\r\n       setShowWeather(true);\r\n\r\n   }\r\n\r\n   function handleSpanClick(event) {\r\n    event.stopPropagation();\r\n    const li = event.target.parentNode;\r\n    const data = li.dataset;\r\n    setClickedCityData({lat: data.lat, lon: data.lon, city: data.city, country: data.country});\r\n    setShowWeather(true);\r\n    // Perform any necessary actions with the clicked span data\r\n  }\r\n\r\n    const buttonClick = () => {\r\n        setShowWeather(false);\r\n    }\r\n\r\nreturn (\r\n\r\n        <div className=\"app__container\">\r\n\r\n            {showWeather ? (\r\n                <div className=\"app__show-weather \">\r\n\r\n                        <div id=\"weather\" className=\"flex__center\">\r\n                            <img src={image} alt=\"icon\" id=\"icon\" />\r\n                            <h1 className=\"app__degree\">{weather.temperature}&deg;C</h1>\r\n                            <p>{}</p>\r\n                            <h2 id=\"city\">{clickedCityData.city} {clickedCityData.country}</h2>\r\n                            <button className=\"btn__change-city btn\" onClick={buttonClick} id=\"change\">Change City</button>\r\n\r\n                            <div className=\"info\">\r\n\r\n                                <div className=\"value\">\r\n                                    <h3>Wind</h3>\r\n                                    <div id=\"windValue\" ><p>{weather.wind_speed} Km/h</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>Feels Like</h3>\r\n                                    <div id=\"feelsLikeValue\" ><p>{weather.feels_like}&deg;C</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>Humidity</h3>\r\n                                    <div id=\"humidityValue\" ><p>{weather.humidity}%</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>Chance of Rain</h3>\r\n                                    <div id=\"rainValue\" ><p>{weather.rain}%</p></div>\r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>MaxTemperature</h3>\r\n                                    <div id=\"max-temp-Value\" ><p>{weather.max_temperature}&deg;C</p></div> \r\n                                </div>\r\n                                <div className=\"value\">\r\n                                    <h3>MinTemperature</h3>\r\n                                    <div id=\"min-temp-Value\" ><p>{weather.min_temperature}&deg;C</p></div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                </div>\r\n\r\n\r\n\r\n            ) : (\r\n                <div  className=\"app__form-container\">\r\n                    <form >\r\n                        <input className=\"input__field\" onChange={debouncedOnChange} type=\"text\" placeholder=\"Search City...\" />\r\n\r\n                        {geoLocation ? (\r\n                            <ul onClick={handleClick}>\r\n                                {geoLocation.map(({name, latitude, longitude, country}, index) => (\r\n                                    <li className=\"app__list-item\"\r\n                                    key={index}\r\n                                    data-lat={latitude}\r\n                                    data-lon={longitude}\r\n                                    data-city={name}\r\n                                    data-country={country}\r\n                                    >\r\n                                    {name} <span onClick={handleSpanClick}>{country}</span>\r\n                                    \r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Waiting...</p>\r\n                        )\r\n                        \r\n                        }\r\n                    </form>\r\n                </div>\r\n\r\n            )}\r\n\r\n        </div>\r\n\r\n       )\r\n}\r\n\r\n\r\nexport default WeatherScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}