{"ast":null,"code":"var _jsxFileName = \"F:\\\\The Complete 2023 Web Development Bootcamp\\\\STUDY-PROJECTS\\\\YoutubeProjects\\\\weather_app\\\\src\\\\components\\\\SearchCity\\\\SearchCity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport debounce from 'lodash.debounce';\nimport './searchCity.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchCity = () => {\n  _s();\n  const key = \"1d57fcba75368cc323dc71241f670c5d\";\n  const [userInput, setUserInput] = useState(\"\");\n  const [ulValue, setUlValue] = useState([]);\n  const updateUserInput = e => {\n    var _e$target;\n    return setUserInput(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n  };\n  const debouncedOnChange = debounce(updateUserInput, 600);\n\n  /*Here I get the weather information */\n\n  const [weatherData, setWeather] = useState([]);\n  const [info, setInfo] = useState({\n    cityLat: 0,\n    cityLon: 0,\n    cityName: ''\n  });\n  const temp = weatherData.main.temp;\n  const feelsLike = weatherData.main.feels_like;\n  const humidity = weatherData.main.humidity;\n  const wind = weatherData.wind.speed;\n  const icon = weatherData.weather[0].icon;\n  console.log(temp);\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${info.cityLat}&lon=${info.cityLon}&appid=${key}&units=metric`).then(response => response.json()).then(data => setWeather(data)).catch(err => console.log(err));\n  }, []);\n  const handleClick = ev => {\n    const li = ev.target;\n    const {\n      lat,\n      lon,\n      name\n    } = li.dataset;\n    if (!lat) {\n      return;\n    }\n    setInfo({\n      cityLat: lat,\n      cityLon: lon,\n      cityName: name\n    });\n  };\n\n  /* Trough here */\n\n  /*Here I get the City name and can click on it to get the onfo about the weather */\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${userInput}&limit=5&appid=${key}`).then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setUlValue(data);\n      } else {\n        setUlValue([]);\n      }\n    }).catch(err => console.log(err));\n  }, [userInput], key);\n  const mapItems = () => ulValue.map(({\n    name,\n    lat,\n    lon,\n    country\n  }, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    \"data-lat\": lat,\n    \"data-lon\": lon,\n    \"data-name\": name,\n    children: [name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 20\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this));\n\n  /* Trough here */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyUp: debouncedOnChange,\n        type: \"text\",\n        placeholder: \"Search City...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mapItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchCity, \"GJgiHOwpGzfRvTf+4LdzZqIm/2Y=\");\n_c = SearchCity;\nexport default SearchCity;\nvar _c;\n$RefreshReg$(_c, \"SearchCity\");","map":{"version":3,"names":["React","useState","useEffect","debounce","jsxDEV","_jsxDEV","SearchCity","_s","key","userInput","setUserInput","ulValue","setUlValue","updateUserInput","e","_e$target","target","value","debouncedOnChange","weatherData","setWeather","info","setInfo","cityLat","cityLon","cityName","temp","main","feelsLike","feels_like","humidity","wind","speed","icon","weather","console","log","fetch","then","response","json","data","catch","err","handleClick","ev","li","lat","lon","name","dataset","Array","isArray","mapItems","map","country","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onKeyUp","type","placeholder","_c","$RefreshReg$"],"sources":["F:/The Complete 2023 Web Development Bootcamp/STUDY-PROJECTS/YoutubeProjects/weather_app/src/components/SearchCity/SearchCity.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport debounce from 'lodash.debounce';\r\n\r\nimport './searchCity.css';\r\n\r\n\r\nconst SearchCity = () => {\r\n    const key = \"1d57fcba75368cc323dc71241f670c5d\";\r\n    \r\n    const [userInput, setUserInput] = useState(\"\");\r\n    const [ulValue, setUlValue] = useState([]);\r\n    const updateUserInput = e => setUserInput(e?.target?.value);\r\n    const debouncedOnChange = debounce(updateUserInput, 600);\r\n\r\n    \r\n/*Here I get the weather information */\r\n\r\n    const [weatherData, setWeather] = useState([]);\r\n    const [info, setInfo] = useState({\r\n        cityLat: 0,\r\n        cityLon: 0,\r\n        cityName : '',\r\n        \r\n    })\r\n\r\n    const temp = weatherData.main.temp;\r\n    const feelsLike = weatherData.main.feels_like;\r\n    const humidity = weatherData.main.humidity;\r\n    const wind = weatherData.wind.speed;\r\n    const icon = weatherData.weather[0].icon;\r\n    console.log(temp);\r\n\r\n    useEffect(() => {\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${info.cityLat}&lon=${info.cityLon}&appid=${key}&units=metric`)\r\n        .then(response => response.json())\r\n        .then(data => setWeather(data))\r\n        .catch(err => console.log(err))\r\n    }, []);\r\n       \r\n    \r\n    const handleClick = (ev) => {\r\n        const li = ev.target;\r\n            const {lat, lon, name} = li.dataset;\r\n            if (!lat) {\r\n                return;\r\n            }\r\n            setInfo({cityLat: lat, cityLon: lon, cityName: name})\r\n\r\n\r\n        }\r\n\r\n/* Trough here */\r\n\r\n/*Here I get the City name and can click on it to get the onfo about the weather */\r\n    useEffect(() => {\r\n         fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${userInput}&limit=5&appid=${key}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (Array.isArray(data)) {\r\n              setUlValue(data);\r\n              \r\n            } else {\r\n              setUlValue([]);\r\n            }\r\n          })\r\n        .catch(err => console.log(err))\r\n\r\n    }, [userInput], key);\r\n\r\n    const mapItems = () => (\r\n        ulValue.map(({name, lat, lon, country}, index) => (\r\n            <li \r\n            \r\n            data-lat={lat} \r\n            data-lon={lon} \r\n            data-name={name} \r\n            key={index}>\r\n            {name} <span>{country}</span></li>\r\n        ))\r\n    )\r\n\r\n/* Trough here */\r\n\r\n    return (\r\n    <div onClick={handleClick}>\r\n        <form>\r\n            <input onKeyUp={debouncedOnChange} type=\"text\" placeholder=\"Search City...\" />\r\n            <ul>\r\n            {mapItems()}\r\n            </ul>\r\n        </form>\r\n    </div>\r\n    )\r\n\r\n};\r\n\r\nexport default SearchCity;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}